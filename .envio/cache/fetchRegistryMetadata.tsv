id	output
{"ipfsHash":"QmYh5pvt2qQ1CWXUM97C4NdDs8pRcaki2wfEu8i6AfqsHS/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Eth Mainnet Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Eth Mainnet Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Eth Mainnet Address Tags", "parentTCRAddress": "0x29cC3E03BD1C4BdF11A641B95050cdd350B914d7", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Eth Mainnet Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmQWLn3NtVSb3c66Gc3DQp65MwR3AcjciMpgoSuKzC7Eef/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Authentic NFTs enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Authentic NFTs enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Authentic NFTs", "parentTCRAddress": "0xD5994f15BE9987104D9821AA99d1C97227c7C08c", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Authentic NFTs enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmPW7KfECihpaZ9TyDRo2zM7Cgxm9C6KJ6YkYFEZXrN46g/clr-meta-evidence.json"}	{"title": "Remove a nft from Authentic NFTs", "fileURI": "/ipfs/QmQ4HBs8AtgtRkonBhsxNBgaBBnaUmKXEvWksQ9tXamEHe/kleros-authentic-nft-registry-and-kleros-authentic-nft-collection-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT thumbnail.", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Offical name of the NFT.", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name.", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address.", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides.", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft", "tcrTitle": "Authentic NFTs", "isTCRofTCRs": false, "itemNamePlural": "nfts", "relTcrDisabled": true, "tcrDescription": "The Kleros Authentic NFT Registry (KANR) and Kleros Authentic NFT Collection Registry (KANCR) are lists of authentic NFTs and NFT collections respectively.", "requireRemovalEvidence": true}, "question": "Does the nft comply with the required criteria?", "description": "Someone requested to remove a nft from Authentic NFTs", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the nft does not comply with the required criteria and should be removed.", "Select this if you think the nft complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmboqgEvHTKzXEQ5yjrjpABuNwA5QkRC88cxWVq9FQTzeA/reg-meta-evidence.json"}	{"title": "Add a nft collection to Authentic NFT Collections", "fileURI": "/ipfs/QmQCQ943e6NzmGJQj1uc74zS53fesdMVkFKgjtzzh1fDej/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The chain ID of the network on which the collection resides", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft collection", "tcrTitle": "Authentic NFT Collections", "isTCRofTCRs": false, "itemNamePlural": "nft collections", "tcrDescription": "A list of authentic NFT collections.", "requireRemovalEvidence": true}, "question": "Does the nft collection comply with the required criteria?", "description": "Someone requested to add a nft collection to Authentic NFT Collections", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the nft collection complies with the required criteria and should be added.", "Select this if you think the nft collection does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaJ47DUrrUZn1zwBA97pJPYnGyAskGvnpY3hTegUr6kMk/reg-meta-evidence.json"}	{"title": "Add a tag to Eth Mainnet Address Tags", "fileURI": "/ipfs/QmewcbVBwYKfVNbtQ6CESKEtTqdbjafqkx9drafaA5Ni5n/address-tags.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Eth Mainnet Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses. Don't submit contract not deployed to ETH mainnet here.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Eth Mainnet Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPFDaBisyij3iXuuM2SiVuGfKtQ98cDVi19h4gp8PMhiH/clr-meta-evidence.json"}	{"title": "Remove a nft collection from Authentic NFT Collections", "fileURI": "/ipfs/QmQCQ943e6NzmGJQj1uc74zS53fesdMVkFKgjtzzh1fDej/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The chain ID of the network on which the collection resides", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft collection", "tcrTitle": "Authentic NFT Collections", "isTCRofTCRs": false, "itemNamePlural": "nft collections", "tcrDescription": "A list of authentic NFT collections.", "requireRemovalEvidence": true}, "question": "Does the nft collection comply with the required criteria?", "description": "Someone requested to remove a nft collection from Authentic NFT Collections", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the nft collection does not comply with the required criteria and should be removed.", "Select this if you think the nft collection complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZY5nqHwJWaW5YkjkRzYoXDaHFhpDAzQqsXpXdh2PsU55/kmanr-clr-meta-evidence.json"}	{"title": "Remove a nft from Authentic NFTs", "fileURI": "/ipfs/QmVntT2i7MkxDVhe5XVRQZyRBtdPyBKWajytFQ39C5AFZs/policy0.3.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT thumbnail.", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Offical name of the NFT.", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name.", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address.", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides.", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft", "tcrTitle": "Authentic NFTs", "isTCRofTCRs": false, "itemNamePlural": "nfts", "relTcrDisabled": true, "tcrDescription": "The Kleros Authentic NFT Registry (KANR) and Kleros Authentic NFT Collection Registry (KANCR) are lists of authentic NFTs and NFT collections respectively.", "requireRemovalEvidence": true}, "question": "Does the nft comply with the required criteria?", "description": "Someone requested to remove a nft from Authentic NFTs", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the nft does not comply with the required criteria and should be removed.", "Select this if you think the nft complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUjz6g6LwkJoe6jcxNWddEDDq8L4XaHLDdQZLyys4BTTy/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Authentic NFT Collections enabled badges", "fileURI": "/ipfs/QmW8vydQC5dprDVzbKQWc5uUwzVEPaRtpKiMyUrDuRCXnz/no-submissions-allowed-for-now.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Authentic NFT Collections enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Authentic NFT Collections", "parentTCRAddress": "0x2F19F817BBF800B487b7F2E51f24aD5Ea0222463", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Authentic NFT Collections enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmd6f9Fs16PG6Xzo6D727JQsM3SR2vCcmZB3VR4pjKCa6S/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Eth Mainnet Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Eth Mainnet Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Eth Mainnet Address Tags", "parentTCRAddress": "0x29cC3E03BD1C4BdF11A641B95050cdd350B914d7", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Eth Mainnet Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmTUz7FRVi8yiz2256DB1HjjzDCa1orzJiCmMeRs6ULy87/kmancr-clr-meta-evidence.json"}	{"title": "Remove a nft collection from Authentic NFT Collections", "fileURI": "/ipfs/QmVntT2i7MkxDVhe5XVRQZyRBtdPyBKWajytFQ39C5AFZs/policy0.3.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The chain ID of the network on which the collection resides", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft collection", "tcrTitle": "Authentic NFT Collections", "isTCRofTCRs": false, "itemNamePlural": "nft collections", "tcrDescription": "A list of authentic NFT collections.", "requireRemovalEvidence": true}, "question": "Does the nft collection comply with the required criteria?", "description": "Someone requested to remove a nft collection from Authentic NFT Collections", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the nft collection does not comply with the required criteria and should be removed.", "Select this if you think the nft collection complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYunktTPry7AoFdFFbbdk8VPxd9nTCMhbAJq1unaqekZE/reg-meta-evidence.json"}	{"title": "Add a nft to Authentic NFTs", "fileURI": "/ipfs/QmQCQ943e6NzmGJQj1uc74zS53fesdMVkFKgjtzzh1fDej/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT thumbnail.", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Offical name of the NFT.", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name.", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address.", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides.", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft", "tcrTitle": "Authentic NFTs", "isTCRofTCRs": false, "itemNamePlural": "nfts", "relTcrDisabled": true, "tcrDescription": "The Kleros Authentic NFT Registry (KANR) and Kleros Authentic NFT Collection Registry (KANCR) are lists of authentic NFTs and NFT collections respectively.", "requireRemovalEvidence": true}, "question": "Does the nft comply with the required criteria?", "description": "Someone requested to add a nft to Authentic NFTs", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the nft complies with the required criteria and should be added.", "Select this if you think the nft does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYtnztuukxVHPUGbqyyu8V3tR7zdt2R8fG9n4w5cCCbrv/clr-meta-evidence.json"}	{"title": "Remove a nft from Authentic NFTs", "fileURI": "/ipfs/QmQCQ943e6NzmGJQj1uc74zS53fesdMVkFKgjtzzh1fDej/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT thumbnail.", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Offical name of the NFT.", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name.", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address.", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides.", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft", "tcrTitle": "Authentic NFTs", "isTCRofTCRs": false, "itemNamePlural": "nfts", "relTcrDisabled": true, "tcrDescription": "The Kleros Authentic NFT Registry (KANR) and Kleros Authentic NFT Collection Registry (KANCR) are lists of authentic NFTs and NFT collections respectively.", "requireRemovalEvidence": true}, "question": "Does the nft comply with the required criteria?", "description": "Someone requested to remove a nft from Authentic NFTs", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the nft does not comply with the required criteria and should be removed.", "Select this if you think the nft complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmfE5LnCGKtDZ4Xn2sBNgUaQN7Pdp87ZUiaqyHJXf92wFF/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Authentic NFT Collections enabled badges", "fileURI": "/ipfs/QmW8vydQC5dprDVzbKQWc5uUwzVEPaRtpKiMyUrDuRCXnz/no-submissions-allowed-for-now.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Authentic NFT Collections enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Authentic NFT Collections", "parentTCRAddress": "0x2F19F817BBF800B487b7F2E51f24aD5Ea0222463", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Authentic NFT Collections enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmUiUrVELUYkMnAPfXUE5oqGd43kLNZ58EHvNofwgT27hm/kmanr-reg-meta-evidence.json"}	{"title": "Add a nft to Authentic NFTs", "fileURI": "/ipfs/QmVntT2i7MkxDVhe5XVRQZyRBtdPyBKWajytFQ39C5AFZs/policy0.3.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT thumbnail.", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Offical name of the NFT.", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name.", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address.", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides.", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft", "tcrTitle": "Authentic NFTs", "isTCRofTCRs": false, "itemNamePlural": "nfts", "relTcrDisabled": true, "tcrDescription": "The Kleros Authentic NFT Registry (KANR) and Kleros Authentic NFT Collection Registry (KANCR) are lists of authentic NFTs and NFT collections respectively.", "requireRemovalEvidence": true}, "question": "Does the nft comply with the required criteria?", "description": "Someone requested to add a nft to Authentic NFTs", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the nft complies with the required criteria and should be added.", "Select this if you think the nft does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmd5FKa7oF3uofoFA1NtieU2Pm8TAHqQjAEFbkhMfsw6Gm/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Authentic NFTs enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Authentic NFTs enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Authentic NFTs", "parentTCRAddress": "0xD5994f15BE9987104D9821AA99d1C97227c7C08c", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Authentic NFTs enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmUW1cqCr4qmnABnMkFjv4RRhYLheg2mJTtWre4ZxqHJeW/clr-meta-evidence.json"}	{"title": "Remove a tag from Eth Mainnet Address Tags", "fileURI": "/ipfs/QmewcbVBwYKfVNbtQ6CESKEtTqdbjafqkx9drafaA5Ni5n/address-tags.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Eth Mainnet Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses. Don't submit contract not deployed to ETH mainnet here.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Eth Mainnet Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbhPc1C6rEqYoUEsTw3gaS8pbDDJtFaMJcqBmsexYffQE/reg-meta-evidence.json"}	{"title": "Add a nft to Authentic NFTs", "fileURI": "/ipfs/QmQ4HBs8AtgtRkonBhsxNBgaBBnaUmKXEvWksQ9tXamEHe/kleros-authentic-nft-registry-and-kleros-authentic-nft-collection-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT thumbnail.", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Offical name of the NFT.", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name.", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address.", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides.", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft", "tcrTitle": "Authentic NFTs", "isTCRofTCRs": false, "itemNamePlural": "nfts", "relTcrDisabled": true, "tcrDescription": "The Kleros Authentic NFT Registry (KANR) and Kleros Authentic NFT Collection Registry (KANCR) are lists of authentic NFTs and NFT collections respectively.", "requireRemovalEvidence": true}, "question": "Does the nft comply with the required criteria?", "description": "Someone requested to add a nft to Authentic NFTs", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the nft complies with the required criteria and should be added.", "Select this if you think the nft does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYzbmpkEFhsufVNaWavUQHCvKLwsGQ2nXegyM8L5tYdgR/kmancr-reg-meta-evidence.json"}	{"title": "Add a nft collection to Authentic NFT Collections", "fileURI": "/ipfs/QmVntT2i7MkxDVhe5XVRQZyRBtdPyBKWajytFQ39C5AFZs/policy0.3.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The chain ID of the network on which the collection resides", "isIdentifier": true}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVNQsfSt1NTnGPANbpANsacnLRPNowcwD2LVNkGnqgLQU/list.svg", "itemName": "nft collection", "tcrTitle": "Authentic NFT Collections", "isTCRofTCRs": false, "itemNamePlural": "nft collections", "tcrDescription": "A list of authentic NFT collections.", "requireRemovalEvidence": true}, "question": "Does the nft collection comply with the required criteria?", "description": "Someone requested to add a nft collection to Authentic NFT Collections", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the nft collection complies with the required criteria and should be added.", "Select this if you think the nft collection does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcVXH6yVQHcppp7k8TKAX6tnQfMhYaBJ3g81g2DBf7eup/clr-meta-evidence.json"}	{"title": "Remove an item from Worst NFTs", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "collection", "description": "collection", "isIdentifier": true}, {"type": "number", "label": "nft", "description": "nft", "isIdentifier": true}], "logoURI": "/ipfs/QmULVLJySB7pPbWmBwvqgYioobki9tTUZszg4jGNgzM1kb/thebest.jpeg", "itemName": "item", "tcrTitle": "Worst NFTs", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "the worst NFTs", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from Worst NFTs", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXr9WRXTATpxcKDdoyFb7YHHHhfpHdJxpP9RRXjV4RbR4/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Worst NFTs enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Worst NFTs enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Worst NFTs", "parentTCRAddress": "0x00f3302738eE31FD169F6C0Cd00542471a13a769", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Worst NFTs enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmNc61DEhc8Ac6sFpaLLr9Sser7wCyWZEtoQ8Ha8vdxXhV/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Best NFTs enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Best NFTs enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Best NFTs", "parentTCRAddress": "0xe3BE8ABc0bd18824cC4C04982a8AC7c608464376", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Best NFTs enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWxwYvjxp3WuySWzivJatJdKM6GjNf8mMfMxN9FGp7kmS/reg-meta-evidence.json"}	{"title": "Add a the best nft to Best NFTs", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "ThumbnaiL", "description": "t", "isIdentifier": false}, {"type": "text", "label": "NamE", "description": "n", "isIdentifier": true}, {"type": "text", "label": "AuthoR", "description": "a", "isIdentifier": true}, {"type": "address", "label": "CollectioN", "description": "c", "isIdentifier": true}, {"type": "number", "label": "TokeniD", "description": "t", "isIdentifier": true}, {"type": "number", "label": "ChainiD", "description": "c", "isIdentifier": true}, {"type": "file", "label": "ProoF", "description": "p", "allowedFileTypes": "txt pdf"}, {"type": "text", "label": "AttributioN", "description": "a"}], "logoURI": "/ipfs/QmZaUb7QUvYJDtVqDK8mgcLsmTyoTQuAXMYr6A7LLNU4UC/canvas.png", "itemName": "the best nft", "tcrTitle": "Best NFTs", "isTCRofTCRs": false, "itemNamePlural": "the best nfts", "relTcrDisabled": true, "tcrDescription": "A list of only the best NFTs", "requireRemovalEvidence": true}, "question": "Does the the best nft comply with the required criteria?", "description": "Someone requested to add a the best nft to Best NFTs", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the the best nft complies with the required criteria and should be added.", "Select this if you think the the best nft does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXtyZA5yzZR4Mrd4kihPXtfH4Ky7tSxL8qVkwARntmmau/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Best NFTs enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Best NFTs enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Best NFTs", "parentTCRAddress": "0xe3BE8ABc0bd18824cC4C04982a8AC7c608464376", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Best NFTs enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmRR6nmUUKQZNdyyHwUyYxmBFEENcT71aUSmt8JAkezNyC/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0x76944a2678A0954A610096Ee78E8CEB8d46d5922", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmebvSYuCHjW5adQLpt3ZXFmd4yQrBSMqPnsV8RqLE497z/kmancr-clr.json"}	{"title": "Remove an NFT collection from the Authentic NFT Collection Registry", "fileURI": "/ipfs/QmQyEgs7r3TnBZtQaRENjfBVPCJsPWXAj3JrN8dCbsyHjQ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the collection resides", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The collection's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmV2vTfULSHwV34y4i9WDYCHy5dyBtfivYyZQKvR6botRq/kmancr.png", "itemName": "NFT collection", "tcrTitle": "Authentic NFT Collection Registry", "isTCRofTCRs": false, "itemNamePlural": "NFT collections", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFT collections", "requireRemovalEvidence": true}, "question": "Does the NFT collection comply with the required criteria?", "description": "Someone requested to remove an NFT collection from the Authentic NFT Collection Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the NFT collection does not comply with the required criteria and should be removed.", "Select this if you think the NFT collection complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmX6DXqAkr1qBBD45yhzb2nsysA9ktNCkYD529fE7sKgve/clr-meta-evidence.json"}	{"title": "Remove a the best nft from Best NFTs", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "ThumbnaiL", "description": "t", "isIdentifier": false}, {"type": "text", "label": "NamE", "description": "n", "isIdentifier": true}, {"type": "text", "label": "AuthoR", "description": "a", "isIdentifier": true}, {"type": "address", "label": "CollectioN", "description": "c", "isIdentifier": true}, {"type": "number", "label": "TokeniD", "description": "t", "isIdentifier": true}, {"type": "number", "label": "ChainiD", "description": "c", "isIdentifier": true}, {"type": "file", "label": "ProoF", "description": "p", "allowedFileTypes": "txt pdf"}, {"type": "text", "label": "AttributioN", "description": "a"}], "logoURI": "/ipfs/QmZaUb7QUvYJDtVqDK8mgcLsmTyoTQuAXMYr6A7LLNU4UC/canvas.png", "itemName": "the best nft", "tcrTitle": "Best NFTs", "isTCRofTCRs": false, "itemNamePlural": "the best nfts", "relTcrDisabled": true, "tcrDescription": "A list of only the best NFTs", "requireRemovalEvidence": true}, "question": "Does the the best nft comply with the required criteria?", "description": "Someone requested to remove a the best nft from Best NFTs", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the the best nft does not comply with the required criteria and should be removed.", "Select this if you think the the best nft complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXU3iZFNreS6s8aTgcD3CmfagJ2RVKjyVs86bzZdDiTvn/kmanr-clr.json"}	{"title": "Remove an NFT from the Authentic NFT Registry", "fileURI": "/ipfs/QmQyEgs7r3TnBZtQaRENjfBVPCJsPWXAj3JrN8dCbsyHjQ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT's thumbnail", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the NFT", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The NFT's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVVBTtSvdvh6MyJr9XWgfFigvpxw3uG8wEcFTfdujjBai/kmanr.png", "itemName": "NFT", "tcrTitle": "Authentic NFT Registry", "isTCRofTCRs": false, "itemNamePlural": "NFTs", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFTs", "requireRemovalEvidence": true}, "question": "Does the NFT comply with the required criteria?", "description": "Someone requested to remove an NFT from the Authentic NFT Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the NFT does not comply with the required criteria and should be removed.", "Select this if you think the NFT complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQtH879ecMJ4X9g1fNAp9vb8TzFjxsW2DBK8R9HLSvACU/kmanr-reg.json"}	{"title": "Add an NFT to the Authentic NFT Registry", "fileURI": "/ipfs/QmQyEgs7r3TnBZtQaRENjfBVPCJsPWXAj3JrN8dCbsyHjQ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT's thumbnail", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the NFT", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the NFT resides", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The NFT's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVVBTtSvdvh6MyJr9XWgfFigvpxw3uG8wEcFTfdujjBai/kmanr.png", "itemName": "NFT", "tcrTitle": "Authentic NFT Registry", "isTCRofTCRs": false, "itemNamePlural": "NFTs", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFTs", "requireRemovalEvidence": true}, "question": "Does the NFT comply with the required criteria?", "description": "Someone requested to add an NFT to the Authentic NFT Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the NFT complies with the required criteria and should be added.", "Select this if you think the NFT does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUmgWQN6KszbFXFA59hvc8BaTBjYVYct2yVoambson3Lm/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmSFNMMLwC7tiWE1kh6wGQ2hQJ2MT6GL52JnF2SeCiSV4j/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address).", "isIdentifier": false}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcLx3oAeyvbbbuafXQ84MEDmNzdtUWceeYheCqQrdd3DM/reg-meta-evidence.json"}	{"title": "Add an item to Worst NFTs", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "collection", "description": "collection", "isIdentifier": true}, {"type": "number", "label": "nft", "description": "nft", "isIdentifier": true}], "logoURI": "/ipfs/QmULVLJySB7pPbWmBwvqgYioobki9tTUZszg4jGNgzM1kb/thebest.jpeg", "itemName": "item", "tcrTitle": "Worst NFTs", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "the worst NFTs", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to Worst NFTs", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZwxbMW9rg3nZsUJDPiMLXChLaZpmnWuQjdqAtME3otrn/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmSFNMMLwC7tiWE1kh6wGQ2hQJ2MT6GL52JnF2SeCiSV4j/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address).", "isIdentifier": false}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmb7z7uUk4L4BvLxchgU1vrUNvQUsFQiC36uzHAz6M2bNP"}	{"title": "Remove the best NFT", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "ThumbnaiLo", "description": "t XD", "isIdentifier": false}, {"type": "text", "label": "NamEo", "description": "n XD", "isIdentifier": true}, {"type": "text", "label": "AuthoR", "description": "a", "isIdentifier": true}, {"type": "address", "label": "CollectioN", "description": "c", "isIdentifier": true}, {"type": "number", "label": "TokeniD", "description": "t", "isIdentifier": true}, {"type": "file", "label": "ProoF", "description": "p", "allowedFileTypes": "txt jpg"}, {"type": "long text", "label": "AttributioN", "description": "a"}], "logoURI": "/ipfs/QmZaUb7QUvYJDtVqDK8mgcLsmTyoTQuAXMYr6A7LLNU4UC/canvas.png", "itemName": "ThE BesT NFT", "tcrTitle": "Best NFTs", "isTCRofTCRs": false, "itemNamePlural": "ThE BesT nfts", "relTcrDisabled": true, "tcrDescription": "A list of only the best NFTs", "requireRemovalEvidence": true}, "question": "Is the best NFT the best NFT?", "description": "Someone requested to remove the best NFT", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the the best NFT is not the best NFT", "Select this if you think the the best NFT is the best NFT"]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYurkkyawxeNSSn2uAmwTKJp1EQYPDN5PYPJqmnq7jtTj/kmancr-reg.json"}	{"title": "Add an NFT collection to the Authentic NFT Collection Registry", "fileURI": "/ipfs/QmQyEgs7r3TnBZtQaRENjfBVPCJsPWXAj3JrN8dCbsyHjQ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The ID of the chain on which the collection resides", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The collection's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmV2vTfULSHwV34y4i9WDYCHy5dyBtfivYyZQKvR6botRq/kmancr.png", "itemName": "NFT collection", "tcrTitle": "Authentic NFT Collection Registry", "isTCRofTCRs": false, "itemNamePlural": "NFT collections", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFT collections", "requireRemovalEvidence": true}, "question": "Does the NFT collection comply with the required criteria?", "description": "Someone requested to add an NFT collection to the Authentic NFT Collection Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the NFT collection complies with the required criteria and should be added.", "Select this if you think the NFT collection does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRjoiLYoNb9uyr8MTQxZTT6mNHkjPNvCcVrk6hLTGjUJq/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmSxzx17a2tBAXwtVGXU2s22phPmiLeNwBivLiGkcztJK8/address-tag-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmQjJio59WkrQDzPC5kSP3EiGaqrWxjGfkvhmD2mWwm41M/index.html"}
{"ipfsHash":"QmcnzAxUg22YJVs7rYiN8L5BcxdV4xnTYUWoRpm5C5P8vG/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmRPW6hcV2qJxx6nuLPCBdK7oPMg75tw1YxXqNuq5bGt95/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Ethereum: Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmQjJio59WkrQDzPC5kSP3EiGaqrWxjGfkvhmD2mWwm41M/index.html"}
{"ipfsHash":"QmeMyev8aF2rdgU4jHqs2pxJ5DDy9sB7rs9f6o7u7xzP5N/reg-meta-evidence.json"}	{"title": "Add an item to PoC NFT blacklist (Classic Curate2)", "fileURI": "/ipfs/QmdbBDarTAFKwxts4e8vzaHmiJ2Y6dRvx6xjHyiBeV1mfq/kleros-keep-calm.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "NFT contract", "description": "Contract of the NFT in question", "isIdentifier": true}, {"type": "number", "label": "tokenId", "description": "Tokenid of the NFT in question", "isIdentifier": true}], "logoURI": "/ipfs/Qmf8gAKjQGePxMUv3GYxwEyxAKTkij4zT6GnEHXAqMsKv4/secured-by-galxe-passport2.png", "itemName": "item", "tcrTitle": "PoC NFT blacklist (Classic Curate2)", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "PoC NFT blacklist (Classic Curate)", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to PoC NFT blacklist (Classic Curate2)", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmY4jogoMDU6ey6QC9g9k3MQoTBAkQ2RunWLUT2dZQVGT9/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from PoC NFT blacklist (Classic Curate2) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "PoC NFT blacklist (Classic Curate2) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to PoC NFT blacklist (Classic Curate2)", "parentTCRAddress": "0xBC613ABf40Cccbe68FA2ec27Fbc5B1C30002DbC8", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from PoC NFT blacklist (Classic Curate2) enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmQnXPejA45kcohgTKMRzpEizH9PLopjhYrfWyNkRbHtpE/clr-meta-evidence.json"}	{"title": "Remove an item from PoC NFT blacklist (Classic Curate2)", "fileURI": "/ipfs/QmdbBDarTAFKwxts4e8vzaHmiJ2Y6dRvx6xjHyiBeV1mfq/kleros-keep-calm.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "NFT contract", "description": "Contract of the NFT in question", "isIdentifier": true}, {"type": "number", "label": "tokenId", "description": "Tokenid of the NFT in question", "isIdentifier": true}], "logoURI": "/ipfs/Qmf8gAKjQGePxMUv3GYxwEyxAKTkij4zT6GnEHXAqMsKv4/secured-by-galxe-passport2.png", "itemName": "item", "tcrTitle": "PoC NFT blacklist (Classic Curate2)", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "PoC NFT blacklist (Classic Curate)", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from PoC NFT blacklist (Classic Curate2)", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaaoYtnKEenvdgQcj9oztJ1iTT6KZJWHrSa3tVM6anBWB/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Santo Sybil followers enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Santo Sybil followers enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Santo Sybil followers", "parentTCRAddress": "0x3dD17B2b6E64FD0F8d106c62d9ac7979CeE2af51", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Santo Sybil followers enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmfAqmDjV7SXu7ZT8UXT5fWe844qebGPE5ag9RCcZGNQMQ"}	{"title": "Add the best nft", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "ThumbnaiLo", "description": "t XD", "isIdentifier": false}, {"type": "text", "label": "NamE", "description": "n", "isIdentifier": true}, {"type": "text", "label": "AuthoR", "description": "a", "isIdentifier": true}, {"type": "address", "label": "CollectioN", "description": "c", "isIdentifier": true}, {"type": "number", "label": "TokeniD", "description": "t", "isIdentifier": true}, {"type": "file", "label": "ProoF", "description": "p", "allowedFileTypes": "txt jpg"}, {"type": "long text", "label": "AttributioN", "description": "a"}], "logoURI": "/ipfs/QmZaUb7QUvYJDtVqDK8mgcLsmTyoTQuAXMYr6A7LLNU4UC/canvas.png", "itemName": "ThE BesT NFT", "tcrTitle": "Best NFTs", "isTCRofTCRs": false, "itemNamePlural": "ThE BesT nfts", "relTcrDisabled": true, "tcrDescription": "A list of only the best NFTs", "requireRemovalEvidence": true}, "question": "Is the best NFT the best?", "description": "Someone requested to add the best NFT", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the the best nft is the best", "Select this if you think the the best nft is the worst"]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPjNCSBxoTgzLcnu9NbCN2NNppXsxe4QtY5fXbrSVzvrh/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmSxzx17a2tBAXwtVGXU2s22phPmiLeNwBivLiGkcztJK8/address-tag-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmQjJio59WkrQDzPC5kSP3EiGaqrWxjGfkvhmD2mWwm41M/index.html"}
{"ipfsHash":"QmdbnZEmRH3W5neQPLWa9iFebPNdh1h4BFeX2HWKo93GFj/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0x76944a2678A0954A610096Ee78E8CEB8d46d5922", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVfCbKV4waNLsqhDs1V6sx8pEb6RmS49zsnTCVuvRKYud/reg-meta-evidence.json"}	{"title": "Add a tournament to Sport Bets Tests", "fileURI": "/ipfs/QmQPsxVKD4jP5pfqLxZVKTtb8dRdSbzSMXfRgjLWx6Jw4j/sports-questions-sets-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Name", "description": "Name of the tournament", "isIdentifier": true}, {"type": "text", "label": "hash", "description": "hash of the questionsIDs ordered alphabetically", "isIdentifier": true}, {"type": "file", "label": "json", "description": "JSON file with the required fields", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmS52pNeomcU99XFQs9BQYdmtmHCkKELxvjfr9jiizMuYD/bets.png", "itemName": "tournament", "tcrTitle": "Sport Bets Tests", "isTCRofTCRs": false, "itemNamePlural": "tournaments", "tcrDescription": "Testing for bet sports questions", "requireRemovalEvidence": true}, "question": "Does the tournament comply with the required criteria?", "description": "Someone requested to add a tournament to Sport Bets Tests", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tournament complies with the required criteria and should be added.", "Select this if you think the tournament does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmW4zYiRU7aj8sF9QdSoLRv683jx7LK5HQagqXqQhan5Zd/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Sports Bets enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Sports Bets enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Sports Bets", "parentTCRAddress": "0x29f9F1eb5fFE59db4C9D49f060a7d6eDbfac8840", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Sports Bets enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmbxq5W1UbL9SHeiZSuzEWRoshPJUgeZxUzUSEd6rAKFjk/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmRPW6hcV2qJxx6nuLPCBdK7oPMg75tw1YxXqNuq5bGt95/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Ethereum: Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmQjJio59WkrQDzPC5kSP3EiGaqrWxjGfkvhmD2mWwm41M/index.html"}
{"ipfsHash":"QmNjY2ne9mJ6TWS8Sy1w9HQpWm2xghf3wdaWmVseEU8H5Y/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Santo Sybil followers enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Santo Sybil followers enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Santo Sybil followers", "parentTCRAddress": "0x3dD17B2b6E64FD0F8d106c62d9ac7979CeE2af51", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Santo Sybil followers enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWZWL7wH8GaomGYhMfk8QemP9N9ADLs41r7Rf8bBggn4z/clr-meta-evidence.json"}	{"title": "Remove a follower from Santo Sybil followers", "fileURI": "/ipfs/QmRRhK4x5f9Ap4zUXBt6CHCjxPUnuF9wmjevfDwMrsujL8/telegram-registry-rules.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Follower", "description": "The santi sybil follower", "isIdentifier": true}], "logoURI": "/ipfs/QmQUmAN139y5ByGYUPvnwLmAUqu9dKF8n1Wc4xje7z9TAy/santo.png", "itemName": "follower", "tcrTitle": "Santo Sybil followers", "isTCRofTCRs": false, "itemNamePlural": "followers", "relTcrDisabled": true, "tcrDescription": "Followers of the hottest cryptoinfluencer", "requireRemovalEvidence": true}, "question": "Does the follower comply with the required criteria?", "description": "Someone requested to remove a follower from Santo Sybil followers", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the follower does not comply with the required criteria and should be removed.", "Select this if you think the follower complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmSgyZTaEykD9xhxBJDwnzHUsApKSjTuobnyBzmhnRN11F/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Ledger Contract Domain Name registry v2 enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Ledger Contract Domain Name registry v2 enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Ledger Contract Domain Name registry v2", "parentTCRAddress": "0x957A53A994860BE4750810131d9c876b2f52d6E1", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Ledger Contract Domain Name registry v2 enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmNtdHyuMDfnuC8cYVKCxXKpcXKbG7tczZR3rZaBgB6bcx/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Ledger Contract Domain Name registry v2 enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Ledger Contract Domain Name registry v2 enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Ledger Contract Domain Name registry v2", "parentTCRAddress": "0x957A53A994860BE4750810131d9c876b2f52d6E1", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Ledger Contract Domain Name registry v2 enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qma6EShy6rdJQvAZzV2PkGqYNs2S3SNtkEftfLVdCsasFf/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmbHrNhkdJ378zwMUCa75amtoGa27WruUnb7rzaptmbKzS/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address).", "isIdentifier": false}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZjXQu6jZ4bnwAQ5gcdh3anWRoKhorQW16Puik3EwNf4e/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Sport Bets Tests enabled badges", "fileURI": "/ipfs/QmQPsxVKD4jP5pfqLxZVKTtb8dRdSbzSMXfRgjLWx6Jw4j/sports-questions-sets-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Sport Bets Tests enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Sport Bets Tests", "parentTCRAddress": "0x18286507b4F61b26f0aA7B5D7d34D7235A576429", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Sport Bets Tests enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZq5ZouuJaauMfm52D4syoncvHAf11AcwVREcvMN4oM17/clr-meta-evidence.json"}	{"title": "Remove an entry from Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/Qmeydf2zRpbrbChdUurECdQs8Syjnu4sAWBZ8q6hkyBwb3/contract-domain-name-registry-for-ledger-policy-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to remove an entry from Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the entry does not comply with the required criteria and should be removed.", "Select this if you think the entry complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVPPN6qtsqkn7KywWP4pm4P9jka8zE7nRZ3RAivtZUQPg/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmbHrNhkdJ378zwMUCa75amtoGa27WruUnb7rzaptmbKzS/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "address", "label": "Contract Address", "description": "The Ethereum mainnet hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address).", "isIdentifier": false}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcfoFJBEHgLxyPhL9UxzJ64y5AXeSZrDbt2kz8TTcvVLX/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Worst NFTs enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Worst NFTs enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Worst NFTs", "parentTCRAddress": "0x00f3302738eE31FD169F6C0Cd00542471a13a769", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Worst NFTs enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmYm3qvnADPFWrBo24GPNAyd17skuZD3xC4xjhJJ2UhcLQ/clr-meta-evidence.json"}	{"title": "Remove a tournament from Sport Bets Tests", "fileURI": "/ipfs/QmQPsxVKD4jP5pfqLxZVKTtb8dRdSbzSMXfRgjLWx6Jw4j/sports-questions-sets-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Name", "description": "Name of the tournament", "isIdentifier": true}, {"type": "text", "label": "hash", "description": "hash of the questionsIDs ordered alphabetically", "isIdentifier": true}, {"type": "file", "label": "json", "description": "JSON file with the required fields", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmS52pNeomcU99XFQs9BQYdmtmHCkKELxvjfr9jiizMuYD/bets.png", "itemName": "tournament", "tcrTitle": "Sport Bets Tests", "isTCRofTCRs": false, "itemNamePlural": "tournaments", "tcrDescription": "Testing for bet sports questions", "requireRemovalEvidence": true}, "question": "Does the tournament comply with the required criteria?", "description": "Someone requested to remove a tournament from Sport Bets Tests", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tournament does not comply with the required criteria and should be removed.", "Select this if you think the tournament complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmY7xoFyjrnUnSpTzxZ2yKv2zaxwo7U5SwZKGdgnvLXpc9/regv2.json"}	{"title": "Add an entry to Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmdvkC5Djgk8MfX5ijJR3NJzmvGugUqvui7bKuTErSD6cE/contract-domain-name-registry-for-ledger-policy-3-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to add an entry to Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the entry complies with the required criteria and should be added.", "Select this if you think the entry does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmcf8JAf3wRawFK68eCZFE44zTkSN1nnTL2FNpDY7etFft/clrv2.json"}	{"title": "Remove an entry from Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmdvkC5Djgk8MfX5ijJR3NJzmvGugUqvui7bKuTErSD6cE/contract-domain-name-registry-for-ledger-policy-3-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to remove an entry from Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the entry does not comply with the required criteria and should be removed.", "Select this if you think the entry complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaKKptfNNgJy3JqLc23LNvsFeWda4CuwioCwwAj9V5qdQ/reg-meta-evidence.json"}	{"title": "Add a follower to Santo Sybil followers", "fileURI": "/ipfs/QmRRhK4x5f9Ap4zUXBt6CHCjxPUnuF9wmjevfDwMrsujL8/telegram-registry-rules.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Follower", "description": "The santi sybil follower", "isIdentifier": true}], "logoURI": "/ipfs/QmQUmAN139y5ByGYUPvnwLmAUqu9dKF8n1Wc4xje7z9TAy/santo.png", "itemName": "follower", "tcrTitle": "Santo Sybil followers", "isTCRofTCRs": false, "itemNamePlural": "followers", "relTcrDisabled": true, "tcrDescription": "Followers of the hottest cryptoinfluencer", "requireRemovalEvidence": true}, "question": "Does the follower comply with the required criteria?", "description": "Someone requested to add a follower to Santo Sybil followers", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the follower complies with the required criteria and should be added.", "Select this if you think the follower does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXwWuwFo22GNeav4t8ahVEBws8N9ejKC8PcFphhNjJKVc/kmancr-clr.json"}	{"title": "Remove an NFT collection from the Authentic NFT Collection Registry", "fileURI": "/ipfs/QmbjQW9NF123vccoVZU19UAXzWdN6E36JehXWuWGc7xRcZ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "rich address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The collection's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmV2vTfULSHwV34y4i9WDYCHy5dyBtfivYyZQKvR6botRq/kmancr.png", "itemName": "NFT collection", "tcrTitle": "Authentic NFT Collection Registry", "isTCRofTCRs": false, "itemNamePlural": "NFT collections", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFT collections", "requireRemovalEvidence": true}, "question": "Does the NFT collection comply with the required criteria?", "description": "Someone requested to remove an NFT collection from the Authentic NFT Collection Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the NFT collection does not comply with the required criteria and should be removed.", "Select this if you think the NFT collection complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQZmHBXckd6JE64mz7ystghzBkzh4wwmmsGGSFsSVsCkZ/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Legitimate DOTA 2 Rampages enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Legitimate DOTA 2 Rampages enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Legitimate DOTA 2 Rampages", "parentTCRAddress": "0x01F292C270f1D477019E9b16465A7C411A160cA9", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Legitimate DOTA 2 Rampages enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmR2JiJ385tTNGH9LwRjzCHcZqHx4bPPto2BQCSpBBgypq/kmanr-reg.json"}	{"title": "Add an NFT to the Authentic NFT Registry", "fileURI": "/ipfs/QmbjQW9NF123vccoVZU19UAXzWdN6E36JehXWuWGc7xRcZ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT's thumbnail", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the NFT", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name", "isIdentifier": true}, {"type": "rich address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The NFT's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVVBTtSvdvh6MyJr9XWgfFigvpxw3uG8wEcFTfdujjBai/kmanr.png", "itemName": "NFT", "tcrTitle": "Authentic NFT Registry", "isTCRofTCRs": false, "itemNamePlural": "NFTs", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFTs", "requireRemovalEvidence": true}, "question": "Does the NFT comply with the required criteria?", "description": "Someone requested to add an NFT to the Authentic NFT Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the NFT complies with the required criteria and should be added.", "Select this if you think the NFT does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZ9EG4yGt6nGEJuzW5KoCpLR5izaW2Bmibxx5VH3NxWQW/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to PoC NFT blacklist (Classic Curate2) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "PoC NFT blacklist (Classic Curate2) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to PoC NFT blacklist (Classic Curate2)", "parentTCRAddress": "0xBC613ABf40Cccbe68FA2ec27Fbc5B1C30002DbC8", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to PoC NFT blacklist (Classic Curate2) enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmQELrLLp4iKk198wxJWrHZ8Ca9Y4S4mHuatTxLf1Bx61m/kmanr-clr.json"}	{"title": "Remove an NFT from the Authentic NFT Registry", "fileURI": "/ipfs/QmbjQW9NF123vccoVZU19UAXzWdN6E36JehXWuWGc7xRcZ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "The NFT's thumbnail", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the NFT", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name", "isIdentifier": true}, {"type": "rich address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "number", "label": "Token ID", "description": "The token ID", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The NFT's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmVVBTtSvdvh6MyJr9XWgfFigvpxw3uG8wEcFTfdujjBai/kmanr.png", "itemName": "NFT", "tcrTitle": "Authentic NFT Registry", "isTCRofTCRs": false, "itemNamePlural": "NFTs", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFTs", "requireRemovalEvidence": true}, "question": "Does the NFT comply with the required criteria?", "description": "Someone requested to remove an NFT from the Authentic NFT Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the NFT does not comply with the required criteria and should be removed.", "Select this if you think the NFT complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbFZtewytpbpm4RsbtF3xRpgeRiVnFBmA4Hxu7wkPxL2a/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Legitimate DOTA 2 Rampages enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Legitimate DOTA 2 Rampages enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Legitimate DOTA 2 Rampages", "parentTCRAddress": "0x01F292C270f1D477019E9b16465A7C411A160cA9", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Legitimate DOTA 2 Rampages enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmfZ3AkkAouUxqNWGfwNwmC2NP1VUuzQKUKiMpbxbnGJch/clr.json"}	{"title": "Remove the best NFT", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "ThumbnaiLo", "description": "t XD", "isIdentifier": false}, {"type": "text", "label": "NamEo", "description": "n XD", "isIdentifier": true}, {"type": "rich address", "label": "CollectioN", "description": "c", "isIdentifier": true}, {"type": "number", "label": "TokeniD", "description": "t", "isIdentifier": true}, {"type": "file", "label": "ProoF", "description": "p", "allowedFileTypes": "txt jpg"}, {"type": "long text", "label": "AttributioN", "description": "a"}], "logoURI": "/ipfs/QmZaUb7QUvYJDtVqDK8mgcLsmTyoTQuAXMYr6A7LLNU4UC/canvas.png", "itemName": "ThE BesT NFT", "tcrTitle": "Best NFTs", "isTCRofTCRs": false, "itemNamePlural": "ThE BesT nfts", "relTcrDisabled": true, "tcrDescription": "A list of only the best NFTs", "requireRemovalEvidence": true}, "question": "Is the best NFT the best NFT?", "description": "Someone requested to remove the best NFT", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the the best NFT is not the best NFT", "Select this if you think the the best NFT is the best NFT"]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmP6ge8F4JLiuXRVHHoP33xqTo23tuabBdPNC8EwFDT2Nr/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Sport Bets Tests enabled badges", "fileURI": "/ipfs/QmQPsxVKD4jP5pfqLxZVKTtb8dRdSbzSMXfRgjLWx6Jw4j/sports-questions-sets-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Sport Bets Tests enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Sport Bets Tests", "parentTCRAddress": "0x18286507b4F61b26f0aA7B5D7d34D7235A576429", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Sport Bets Tests enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmRBF2eaLCGJnt5ax4PRuVAB1aCQ6J4Ewe6UqVhUACPD5G/reg-meta-evidence.json"}	{"title": "Add a tournament to Sports Bets", "fileURI": "/ipfs/Qmar9Vd8cxD6XzH6ZRgFy6MhXJz83rtwQayoxv2jR4r5me/sports-questions-sets-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Hash", "description": "Hash of the set of questions ordered alphabetically.", "isIdentifier": true}, {"type": "number", "label": "Starting Timestmap", "description": "Earliest timestamp of the tournament."}, {"type": "file", "label": "JSON", "description": "JSON file with the fields related to the tournament data.", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmRfhJsRDhQVsVSjgPw7CPoG64NnJ3pD54Fsr9d854sQKh/big-bets-mpnotor-sports-2-football-in-middle.png", "itemName": "tournament", "tcrTitle": "Sports Bets", "isTCRofTCRs": false, "itemNamePlural": "tournaments", "relTcrDisabled": true, "tcrDescription": "A list of a set of questions related to sports bets", "requireRemovalEvidence": true}, "question": "Does the tournament comply with the required criteria?", "description": "Someone requested to add a tournament to Sports Bets", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tournament complies with the required criteria and should be added.", "Select this if you think the tournament does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmX8bc3AbV3bHnF6CGUSU16B6uPfx2JZ38xZHnS7biZFPj/kmancr-reg.json"}	{"title": "Add an NFT collection to the Authentic NFT Collection Registry", "fileURI": "/ipfs/QmbjQW9NF123vccoVZU19UAXzWdN6E36JehXWuWGc7xRcZ/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "Thumbnail", "description": "A thumbnail representative of the collection", "isIdentifier": false}, {"type": "text", "label": "Name", "description": "Official name of the collection", "isIdentifier": true}, {"type": "text", "label": "Author", "description": "Author's name if relevant", "isIdentifier": true}, {"type": "rich address", "label": "Collection", "description": "The collection's address", "isIdentifier": true}, {"type": "link", "label": "Webpage", "description": "The collection's canonical webpage", "isIdentifier": false}, {"type": "file", "label": "Proof", "description": "Optional proof of authenticity", "allowedFileTypes": "pdf txt"}, {"type": "long text", "label": "Attribution", "description": "Optional attribution"}], "logoURI": "/ipfs/QmV2vTfULSHwV34y4i9WDYCHy5dyBtfivYyZQKvR6botRq/kmancr.png", "itemName": "NFT collection", "tcrTitle": "Authentic NFT Collection Registry", "isTCRofTCRs": false, "itemNamePlural": "NFT collections", "relTcrDisabled": true, "tcrDescription": "A list of authentic NFT collections", "requireRemovalEvidence": true}, "question": "Does the NFT collection comply with the required criteria?", "description": "Someone requested to add an NFT collection to the Authentic NFT Collection Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the NFT collection complies with the required criteria and should be added.", "Select this if you think the NFT collection does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRPufw3gxM5xMn5Ark6USvYkcoZgoPQosJv3dQ1rzhZkR/reg-meta-evidence.json"}	{"title": "Add a rampage to Legitimate DOTA 2 Rampages", "fileURI": "/ipfs/Qmb1FMvSJJhWZrYNB4BvAWCFAM2kdux1bRowh5KpauPWra/dota-2-legitimate-rampages-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "number", "label": "Match ID", "description": "The in-game Match ID of the DOTA 2 match in question (e.g. 6646016864, 6647914330).", "isIdentifier": true}, {"type": "text", "label": "Player ID", "description": "The in-game Player ID of the DOTA 2 player in the match (e.g. YapzOr, N0tail).", "isIdentifier": true}, {"type": "text", "label": "Time", "description": "The time (in mm:ss format) at which the Rampage took place within the match."}, {"type": "link", "label": "Video clip link", "description": "To assist jurors with their investigation, submit a link to a video clip (i.e. Youtube, IPFS) showing clearly every kill leading up to the Rampage."}], "logoURI": "/ipfs/QmeX8GwMe52QrKQ4CeDtPPAx5StzLNpjeNTaGpAtpfoJDg/dota2rampage.png", "itemName": "rampage", "tcrTitle": "Legitimate DOTA 2 Rampages", "isTCRofTCRs": false, "itemNamePlural": "rampages", "relTcrDisabled": true, "tcrDescription": "A list of legitimate DOTA 2 Rampages", "requireRemovalEvidence": true}, "question": "Does the rampage comply with the required criteria?", "description": "Someone requested to add a rampage to Legitimate DOTA 2 Rampages", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the rampage complies with the required criteria and should be added.", "Select this if you think the rampage does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRu8jMwoWRbgNhFZx2iSBZvMq9APDNLtaNAmh7E8SzFof/reg-meta-evidence.json"}	{"title": "Add a claim to List of self-insurance claims", "fileURI": "/ipfs/QmeGHhpzTt5cQPWB8Ut5SnBwnpj9s75nqxSsnzUCpFsJhP/acceptance-policy-insurance-claims-v0.1-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Payout address", "description": "The address where the claim will be paid out to ", "isIdentifier": true}, {"type": "number", "label": "Amount", "description": "The payout amount requested, with no trailing zeroes. "}, {"type": "text", "label": "Currency", "description": "The official currency code of the currency/token in question"}, {"type": "link", "label": "Supporting document", "description": "A link to an IPFS/Arweave URL representing a PDF with the supporting documents for this claim"}], "logoURI": "/ipfs/QmYiQSMXspzCvxufmdtYYJn1rSSgYw35vuMZ8eyog9fKn4/316-png-and-svg-insurance-icons-for-free-download-uihere-insurance-icon-png-512-512.png", "itemName": "claim", "tcrTitle": "List of self-insurance claims", "isTCRofTCRs": false, "itemNamePlural": "claims", "relTcrDisabled": true, "tcrDescription": "List of approved insurance claims", "requireRemovalEvidence": true}, "question": "Does the claim comply with the required criteria?", "description": "Someone requested to add a claim to List of self-insurance claims", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the claim complies with the required criteria and should be added.", "Select this if you think the claim does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcmoPVQZM6pS5yAYRK3yj9FNoEtaSPsSvTp44nzSz424g/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from List of Web3 auditors enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of Web3 auditors enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of Web3 auditors", "parentTCRAddress": "0xA78ec5742A5d360f92F6d6d7E775Fb35Ab559a51", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of Web3 auditors enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXM1d1B1pKDNHEnRCKvXfzMcdqhkKVVnsfUi2oD1FvjBA/clr-meta-evidence.json"}	{"title": "Remove a tournament from Sports Bets", "fileURI": "/ipfs/Qmar9Vd8cxD6XzH6ZRgFy6MhXJz83rtwQayoxv2jR4r5me/sports-questions-sets-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Hash", "description": "Hash of the set of questions ordered alphabetically.", "isIdentifier": true}, {"type": "number", "label": "Starting Timestmap", "description": "Earliest timestamp of the tournament."}, {"type": "file", "label": "JSON", "description": "JSON file with the fields related to the tournament data.", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmRfhJsRDhQVsVSjgPw7CPoG64NnJ3pD54Fsr9d854sQKh/big-bets-mpnotor-sports-2-football-in-middle.png", "itemName": "tournament", "tcrTitle": "Sports Bets", "isTCRofTCRs": false, "itemNamePlural": "tournaments", "relTcrDisabled": true, "tcrDescription": "A list of a set of questions related to sports bets", "requireRemovalEvidence": true}, "question": "Does the tournament comply with the required criteria?", "description": "Someone requested to remove a tournament from Sports Bets", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tournament does not comply with the required criteria and should be removed.", "Select this if you think the tournament complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZB2pY2G94xzr7mHxf5uF48UntjhgaSGyVBDoWRiqW195/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from List of known addresses of dApps (test) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of known addresses of dApps (test) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of known addresses of dApps (test)", "parentTCRAddress": "0x16F51C18A7dA06F28639864D6234216C722e5022", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of known addresses of dApps (test) enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVoSTBX6hV4f9HPJ8j5fAVzgWXKhospgRB1Yy2MMRh4n4/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to List of self-insurance claims enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of self-insurance claims enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of self-insurance claims", "parentTCRAddress": "0x01241C91BDCa3206a1E19d67b629f60135357869", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of self-insurance claims enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmRa9mt3BYxBAtf9oxUgEQrRDJ7Xf1AcoM51UseKwjaUtw/reg-meta-evidence.json"}	{"title": "Add an entry to Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/Qmeydf2zRpbrbChdUurECdQs8Syjnu4sAWBZ8q6hkyBwb3/contract-domain-name-registry-for-ledger-policy-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to add an entry to Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the entry complies with the required criteria and should be added.", "Select this if you think the entry does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmb81hvKnD3sLBCq29Y3yMNFS9ymR2rFfpCi6nK2WyCn5A/clr-meta-evidence.json"}	{"title": "Remove a claim from List of self-insurance claims", "fileURI": "/ipfs/QmeGHhpzTt5cQPWB8Ut5SnBwnpj9s75nqxSsnzUCpFsJhP/acceptance-policy-insurance-claims-v0.1-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Payout address", "description": "The address where the claim will be paid out to ", "isIdentifier": true}, {"type": "number", "label": "Amount", "description": "The payout amount requested, with no trailing zeroes. "}, {"type": "text", "label": "Currency", "description": "The official currency code of the currency/token in question"}, {"type": "link", "label": "Supporting document", "description": "A link to an IPFS/Arweave URL representing a PDF with the supporting documents for this claim"}], "logoURI": "/ipfs/QmYiQSMXspzCvxufmdtYYJn1rSSgYw35vuMZ8eyog9fKn4/316-png-and-svg-insurance-icons-for-free-download-uihere-insurance-icon-png-512-512.png", "itemName": "claim", "tcrTitle": "List of self-insurance claims", "isTCRofTCRs": false, "itemNamePlural": "claims", "relTcrDisabled": true, "tcrDescription": "List of approved insurance claims", "requireRemovalEvidence": true}, "question": "Does the claim comply with the required criteria?", "description": "Someone requested to remove a claim from List of self-insurance claims", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the claim does not comply with the required criteria and should be removed.", "Select this if you think the claim complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYoeJcwEL6DhaK2PpTgfvioXyJZssbpfCNFyJjbkpaz21/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Sports Bets enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Sports Bets enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Sports Bets", "parentTCRAddress": "0x29f9F1eb5fFE59db4C9D49f060a7d6eDbfac8840", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Sports Bets enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZt1Em7VfqbUGpdm1SfvLMpFAVAwTxJVv9L2rwRVDqxbn/clr-meta-evidence.json"}	{"title": "Remove an ad from On-chain Ads", "fileURI": "/ipfs/QmVsfTS5jQJVatgmQX1xciZGRPC8uEAFrry4sNuLK5VhMK/on-chain-svg-ads-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "ads", "description": "address", "isIdentifier": true}, {"type": "link", "label": "documentation", "description": "File with documentation", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmZLeLmM6ssX8pH1z6MguZt5zCCUJJCQnh4GUzbLsH6wCB/klipartz.com.png", "itemName": "ad", "tcrTitle": "On-chain Ads", "isTCRofTCRs": false, "itemNamePlural": "ads", "relTcrDisabled": true, "tcrDescription": "A list of smart contract addresses that hold ads in the form of SVG data returned as base64 ", "requireRemovalEvidence": true}, "question": "Does the ad comply with the required criteria?", "description": "Someone requested to remove an ad from On-chain Ads", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the ad does not comply with the required criteria and should be removed.", "Select this if you think the ad complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmdtT3gupJnavSrtyB1fp4r9h1GVSNcYGy3WJxR36X5uPz/reg.json"}	{"title": "Add the best nft", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "image", "label": "ThumbnaiLo", "description": "t XD", "isIdentifier": false}, {"type": "text", "label": "NamE", "description": "n", "isIdentifier": true}, {"type": "rich address", "label": "CollectioN", "description": "c", "isIdentifier": true}, {"type": "number", "label": "TokeniD", "description": "t", "isIdentifier": true}, {"type": "file", "label": "ProoF", "description": "p", "allowedFileTypes": "txt jpg"}, {"type": "long text", "label": "AttributioN", "description": "a"}], "logoURI": "/ipfs/QmZaUb7QUvYJDtVqDK8mgcLsmTyoTQuAXMYr6A7LLNU4UC/canvas.png", "itemName": "ThE BesT NFT", "tcrTitle": "Best NFTs", "isTCRofTCRs": false, "itemNamePlural": "ThE BesT nfts", "relTcrDisabled": true, "tcrDescription": "A list of only the best NFTs", "requireRemovalEvidence": true}, "question": "Is the best NFT the best?", "description": "Someone requested to add the best NFT", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the the best nft is the best", "Select this if you think the the best nft is the worst"]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZg6qv6CiLxzbmiLLCrprBMGDAs5hZbWTFrv9tboQFZsY/reg-meta-evidence.json"}	{"title": "Add a list to List of known addresses of dApps (test)", "fileURI": "/ipfs/QmU2zaJNCBDZZmpGfuMX9DCarzqiso3jPDZvoSd53LAwJQ/known-addresses-for-ledger-policy-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Blockchain", "description": "The name of the blockchain that the address is for.", "isIdentifier": true}, {"type": "text", "label": "dApp Name", "description": "The display name of the dApp in question.", "isIdentifier": true}, {"type": "text", "label": "Token Ticker", "description": "The ticker of the token of the dApp/Project in question. Can be left empty if not applicable.", "isIdentifier": true}, {"type": "text", "label": "Smart contract addresses", "description": "The complete list of contract addresses associated with the dApp in question. This should point to an IPFS CID with this "}], "logoURI": "/ipfs/QmQWT6pPMihcD14agjiCfp8qsxoz2TdtvNLjrBqWMHxHkt/xc-luggage-loop-red.png", "itemName": "list", "tcrTitle": "List of known addresses of dApps (test)", "isTCRofTCRs": false, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "List of known addresses of dApps (test)", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of known addresses of dApps (test)", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qma2N2ZGRJHzQMfyhwx5u56r9F51EEvMecvaCoi2rxw6e5/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from List of self-insurance claims enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of self-insurance claims enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of self-insurance claims", "parentTCRAddress": "0x01241C91BDCa3206a1E19d67b629f60135357869", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of self-insurance claims enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmUAkZE6BdPxfey7RCiL4fWzoy7RgePvYMJyNYPcz7UmzA/clr-meta-evidence.json"}	{"title": "Remove a list from List of known addresses of dApps (test)", "fileURI": "/ipfs/QmU2zaJNCBDZZmpGfuMX9DCarzqiso3jPDZvoSd53LAwJQ/known-addresses-for-ledger-policy-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Blockchain", "description": "The name of the blockchain that the address is for.", "isIdentifier": true}, {"type": "text", "label": "dApp Name", "description": "The display name of the dApp in question.", "isIdentifier": true}, {"type": "text", "label": "Token Ticker", "description": "The ticker of the token of the dApp/Project in question. Can be left empty if not applicable.", "isIdentifier": true}, {"type": "text", "label": "Smart contract addresses", "description": "The complete list of contract addresses associated with the dApp in question. This should point to an IPFS CID with this "}], "logoURI": "/ipfs/QmQWT6pPMihcD14agjiCfp8qsxoz2TdtvNLjrBqWMHxHkt/xc-luggage-loop-red.png", "itemName": "list", "tcrTitle": "List of known addresses of dApps (test)", "isTCRofTCRs": false, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "List of known addresses of dApps (test)", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of known addresses of dApps (test)", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmetvvrXybEZS4NuhhNepYfW7u94LefBveo4jNt9vhrf9L/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to List of Web3 auditors enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of Web3 auditors enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of Web3 auditors", "parentTCRAddress": "0xA78ec5742A5d360f92F6d6d7E775Fb35Ab559a51", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of Web3 auditors enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmcLcKytsw2ofQvY7GkNsvKrm5t2jQ5QRKZFdtGCHqhD5N/clr-meta-evidence.json"}	{"title": "Remove a rampage from Legitimate DOTA 2 Rampages", "fileURI": "/ipfs/Qmb1FMvSJJhWZrYNB4BvAWCFAM2kdux1bRowh5KpauPWra/dota-2-legitimate-rampages-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "number", "label": "Match ID", "description": "The in-game Match ID of the DOTA 2 match in question (e.g. 6646016864, 6647914330).", "isIdentifier": true}, {"type": "text", "label": "Player ID", "description": "The in-game Player ID of the DOTA 2 player in the match (e.g. YapzOr, N0tail).", "isIdentifier": true}, {"type": "text", "label": "Time", "description": "The time (in mm:ss format) at which the Rampage took place within the match."}, {"type": "link", "label": "Video clip link", "description": "To assist jurors with their investigation, submit a link to a video clip (i.e. Youtube, IPFS) showing clearly every kill leading up to the Rampage."}], "logoURI": "/ipfs/QmeX8GwMe52QrKQ4CeDtPPAx5StzLNpjeNTaGpAtpfoJDg/dota2rampage.png", "itemName": "rampage", "tcrTitle": "Legitimate DOTA 2 Rampages", "isTCRofTCRs": false, "itemNamePlural": "rampages", "relTcrDisabled": true, "tcrDescription": "A list of legitimate DOTA 2 Rampages", "requireRemovalEvidence": true}, "question": "Does the rampage comply with the required criteria?", "description": "Someone requested to remove a rampage from Legitimate DOTA 2 Rampages", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the rampage does not comply with the required criteria and should be removed.", "Select this if you think the rampage complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRC6PjpzQXvgLj3FByisjjJLtqypz7fwFPMi14i8X3QSU/reg-meta-evidence.json"}	{"title": "Add an auditor to List of Web3 auditors", "fileURI": "/ipfs/QmVcsLZYoXhzeM7S828aMK8Wh3VyUiSaKUG4YFYR2KjLyD/auditors-acceptance-policy-v1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Auditor Name", "description": "Name of the auditor/auditing firm.", "isIdentifier": true}, {"type": "link", "label": "Auditor Website Link", "description": "The official website of the auditor, including only the protocol, domain and subdomain (only if appropriate and applicable).", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A short description about the auditor in question, to be displayed on any UI that lists these auditors. It should not exceed 100 words.", "isIdentifier": false}], "logoURI": "/ipfs/QmYHqBx1PTDNB8zds9TqsM6MeVRRqjSTksmejkEXyZBozD/audit-icon.png", "itemName": "auditor", "tcrTitle": "List of Web3 auditors", "isTCRofTCRs": false, "itemNamePlural": "auditors", "relTcrDisabled": true, "tcrDescription": "A list of known auditors for Web3 projects and firms", "requireRemovalEvidence": true}, "question": "Does the auditor comply with the required criteria?", "description": "Someone requested to add an auditor to List of Web3 auditors", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the auditor complies with the required criteria and should be added.", "Select this if you think the auditor does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmX8B4bfxcUwEXgcJ6Y4t2gUKtafompz5QtTXvinRSA6GR/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from List of known addresses of dApps (test3) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of known addresses of dApps (test3) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of known addresses of dApps (test3)", "parentTCRAddress": "0xE7c0db719a4DB7438ffA109A25237942D65f4E0e", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of known addresses of dApps (test3) enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmSJgB26Qw7A79iza1cjrdmt7s5fHEKtHA2HFo5kFVpW8e/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to List of known addresses of dApps (test3) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of known addresses of dApps (test3) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of known addresses of dApps (test3)", "parentTCRAddress": "0xE7c0db719a4DB7438ffA109A25237942D65f4E0e", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of known addresses of dApps (test3) enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmehzc2v3Hvxvg5hiQ8jbpHthVR1mWD7PRfecx4zSGUWjn/reg-meta-evidence.json"}	{"title": "Add a list to List of known addresses of dApps (test)", "fileURI": "/ipfs/QmU2zaJNCBDZZmpGfuMX9DCarzqiso3jPDZvoSd53LAwJQ/known-addresses-for-ledger-policy-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Blockchain", "description": "The name of the blockchain that the address is for.", "isIdentifier": true}, {"type": "text", "label": "dApp Name", "description": "The display name of the dApp in question.", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The domain name of the dApp in question", "isIdentifier": true}, {"type": "text", "label": "Token ticker", "description": "The ticker of the token of the dApp/Project in question. Can be left empty if not applicable.", "isIdentifier": true}, {"type": "text", "label": "Smart contract addresses", "description": "The complete list of contract addresses associated with the dApp in question. This should point to an IPFS CID with this "}], "logoURI": "/ipfs/QmQWT6pPMihcD14agjiCfp8qsxoz2TdtvNLjrBqWMHxHkt/xc-luggage-loop-red.png", "itemName": "list", "tcrTitle": "List of known addresses of dApps (test)", "isTCRofTCRs": false, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "List of known addresses of dApps (test)", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of known addresses of dApps (test)", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmc4wf2DWD5RP1W4FN6KXSCKoC8GunKb4x493RHj7fUaY3/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to TB-Test enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "TB-Test enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to TB-Test", "parentTCRAddress": "0x6eC59234949E6e21deD7622E35b0f9D7e4bF744a", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to TB-Test enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmcveBrAGrTqgnz2fQoWPwJM96pZc9hGruHueHQALcFAh1/clr-meta-evidence.json"}	{"title": "Remove a list from List of known addresses of dApps (test)", "fileURI": "/ipfs/QmU2zaJNCBDZZmpGfuMX9DCarzqiso3jPDZvoSd53LAwJQ/known-addresses-for-ledger-policy-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Blockchain", "description": "The name of the blockchain that the address is for.", "isIdentifier": true}, {"type": "text", "label": "dApp Name", "description": "The display name of the dApp in question.", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The domain name of the dApp in question", "isIdentifier": true}, {"type": "text", "label": "Token ticker", "description": "The ticker of the token of the dApp/Project in question. Can be left empty if not applicable.", "isIdentifier": true}, {"type": "text", "label": "Smart contract addresses", "description": "The complete list of contract addresses associated with the dApp in question. This should point to an IPFS CID with this "}], "logoURI": "/ipfs/QmQWT6pPMihcD14agjiCfp8qsxoz2TdtvNLjrBqWMHxHkt/xc-luggage-loop-red.png", "itemName": "list", "tcrTitle": "List of known addresses of dApps (test)", "isTCRofTCRs": false, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "List of known addresses of dApps (test)", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of known addresses of dApps (test)", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPH8R1Lw9YKKGENNnEmheVVQPsuAq1z2Npdaxg4m1GiLx/clr-meta-evidence.json"}	{"title": "Remove an auditor from List of Web3 auditors", "fileURI": "/ipfs/QmVcsLZYoXhzeM7S828aMK8Wh3VyUiSaKUG4YFYR2KjLyD/auditors-acceptance-policy-v1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Auditor Name", "description": "Name of the auditor/auditing firm.", "isIdentifier": true}, {"type": "link", "label": "Auditor Website Link", "description": "The official website of the auditor, including only the protocol, domain and subdomain (only if appropriate and applicable).", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A short description about the auditor in question, to be displayed on any UI that lists these auditors. It should not exceed 100 words.", "isIdentifier": false}], "logoURI": "/ipfs/QmYHqBx1PTDNB8zds9TqsM6MeVRRqjSTksmejkEXyZBozD/audit-icon.png", "itemName": "auditor", "tcrTitle": "List of Web3 auditors", "isTCRofTCRs": false, "itemNamePlural": "auditors", "relTcrDisabled": true, "tcrDescription": "A list of known auditors for Web3 projects and firms", "requireRemovalEvidence": true}, "question": "Does the auditor comply with the required criteria?", "description": "Someone requested to remove an auditor from List of Web3 auditors", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the auditor does not comply with the required criteria and should be removed.", "Select this if you think the auditor complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUVKqeA9yekDYz5NjV1PXLZEtwkYpnwRiXSnPWjwzmZ7u/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to List of known addresses of dApps (test) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of known addresses of dApps (test) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of known addresses of dApps (test)", "parentTCRAddress": "0x16F51C18A7dA06F28639864D6234216C722e5022", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of known addresses of dApps (test) enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWmBk4iSy2XzqB2KjtJerpyfJ56Q4JXk4ZUknpB4nNmEh/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from TB-Test enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "TB-Test enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to TB-Test", "parentTCRAddress": "0x6eC59234949E6e21deD7622E35b0f9D7e4bF744a", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from TB-Test enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmNiBmAuX4AfBEcwSgqTPBATTprDKkEe7eYMceCT3uHYWG/reg-meta-evidence.json"}	{"title": "Add an item to TB-Test", "fileURI": "/ipfs/QmR4BjYpp4VtnMj2GoWsgPu28rMuYs7J53Twqv1eUqKHQS/sample.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The list address.", "isIdentifier": true}], "logoURI": "/ipfs/QmbzbEpQP5FzKgLdpt8GA9CgkpGoUaMebecefULrUtFaoL/nft.jpeg", "itemName": "item", "tcrTitle": "TB-Test", "isTCRofTCRs": true, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "This is a test to understand how the application works.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to TB-Test", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWKpjRJFTuRpRDpeJWH51GTLpdqfe7s8j9ztCAjh5EaaD/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to TB-test 2 enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "TB-test 2 enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to TB-test 2", "parentTCRAddress": "0x6c7f713108558F0b81c069F76b7ef57d031e5561", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to TB-test 2 enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmbGa7Kkdn8ZHmFy9mYYFsyPrbiz6awnkvHsXdMEciqoHu/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from TB-test 2 enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "TB-test 2 enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to TB-test 2", "parentTCRAddress": "0x6c7f713108558F0b81c069F76b7ef57d031e5561", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from TB-test 2 enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmbrGSWGGBNCuaMgG9pXguREhBZSQBytRHLHpVNsS86jw7/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to List of known addresses of dApps (test) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of known addresses of dApps (test) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of known addresses of dApps (test)", "parentTCRAddress": "0x1611c66157C82d7DFeE3F3B508b38df864418f90", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of known addresses of dApps (test) enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWRESHFr6tq1jdhcTCKQorUUc3EjGmBbEsuSvhYD7e2v4/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from List of known addresses of dApps (test) enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "List of known addresses of dApps (test) enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to List of known addresses of dApps (test)", "parentTCRAddress": "0x1611c66157C82d7DFeE3F3B508b38df864418f90", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of known addresses of dApps (test) enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmYYE7GtYpLBckXbzV4fnbxzW97rCA3kdqYqZnZhiGvdtC/clr-meta-evidence.json"}	{"title": "Remove a list from List of known addresses of dApps (test3)", "fileURI": "/ipfs/QmU2zaJNCBDZZmpGfuMX9DCarzqiso3jPDZvoSd53LAwJQ/known-addresses-for-ledger-policy-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Blockchain", "description": "The name of the blockchain that the address is for.", "isIdentifier": true}, {"type": "text", "label": "dApp Name", "description": "The display name of the dApp in question.", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The domain name of the dApp in question", "isIdentifier": true}, {"type": "text", "label": "Token ticker", "description": "The ticker of the token of the dApp/Project in question. Can be left empty if not applicable.", "isIdentifier": true}, {"type": "file", "label": "Smart contract addresses", "description": "The complete list of contract addresses associated with the dApp in question. This should point to an IPFS CID with this ", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmQWT6pPMihcD14agjiCfp8qsxoz2TdtvNLjrBqWMHxHkt/xc-luggage-loop-red.png", "itemName": "list", "tcrTitle": "List of known addresses of dApps (test3)", "isTCRofTCRs": false, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "List of known addresses of dApps for a security use case.", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from List of known addresses of dApps (test3)", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWqbLAJMVcP99os22zCgU522TZtm2R3iuRvefHuVPTGLJ/clr-meta-evidence.json"}	{"title": "Remove an item from TB-test 2", "fileURI": "/ipfs/QmR4BjYpp4VtnMj2GoWsgPu28rMuYs7J53Twqv1eUqKHQS/sample.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Github handle", "description": "the github handle the user wants to claim", "isIdentifier": true}, {"type": "address", "label": "address", "description": "The Address that will own the badge", "isIdentifier": true}], "logoURI": "/ipfs/QmXfqESYSDdNDbNvGRm5vsmDxBUSL8pZHVNpTUxGMWU67p/chrismas.jpeg", "itemName": "item", "tcrTitle": "TB-test 2", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "a new test, this time is not going to be list of lists", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from TB-test 2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmevki2RhkmkMyQfTjrtuUhF8TBC1B1fbrkLuk96LueLni/reg-meta-evidence.json"}	{"title": "Add a list to List of known addresses of dApps (test3)", "fileURI": "/ipfs/QmU2zaJNCBDZZmpGfuMX9DCarzqiso3jPDZvoSd53LAwJQ/known-addresses-for-ledger-policy-v0.1.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Blockchain", "description": "The name of the blockchain that the address is for.", "isIdentifier": true}, {"type": "text", "label": "dApp Name", "description": "The display name of the dApp in question.", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The domain name of the dApp in question", "isIdentifier": true}, {"type": "text", "label": "Token ticker", "description": "The ticker of the token of the dApp/Project in question. Can be left empty if not applicable.", "isIdentifier": true}, {"type": "file", "label": "Smart contract addresses", "description": "The complete list of contract addresses associated with the dApp in question. This should point to an IPFS CID with this ", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmQWT6pPMihcD14agjiCfp8qsxoz2TdtvNLjrBqWMHxHkt/xc-luggage-loop-red.png", "itemName": "list", "tcrTitle": "List of known addresses of dApps (test3)", "isTCRofTCRs": false, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "List of known addresses of dApps for a security use case.", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to List of known addresses of dApps (test3)", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmTS5qxngrzYKZTm4qGaY3XNywfpHrXEhkYBaK1ZDADvp7/reg-meta-evidence.json"}	{"title": "Add a claim to Solace Claims", "fileURI": "/ipfs/QmZgHnufGfZMWZUfPrXnyrz1zfTVXGEXXtrXQBfSBCVc7N/solace-general-claims-acceptance-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "claimant", "description": "The claimant address for the claim", "isIdentifier": true}, {"type": "long text", "label": "information", "description": "The information about claim", "isIdentifier": false}, {"type": "file", "label": "file", "description": "The detailed information about claim", "allowedFileTypes": "pdf doc"}], "logoURI": "/ipfs/QmYeNGqaKuBMRSC6vyh1QcAEASDZKo6YvyZHw6PMZuJUK2/solace-logo.svg", "itemName": "claim", "tcrTitle": "Solace Claims", "isTCRofTCRs": false, "itemNamePlural": "claims", "relTcrDisabled": true, "tcrDescription": "The submitted claims for Solace protocol", "requireRemovalEvidence": true}, "question": "Does the claim comply with the required criteria?", "description": "Someone requested to add a claim to Solace Claims", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the claim complies with the required criteria and should be added.", "Select this if you think the claim does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWQp8JwyGGd6LaMQ5BQvCY5JzHvBUGD7P99tprQm31zyz/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Solace Claims enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Solace Claims enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Solace Claims", "parentTCRAddress": "0x530c5855a371744bdcB5e728a27Ec709F8598633", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Solace Claims enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmTM1cdHRY5Dz6N9LjhsnHksGacAZ7mzdoax12w7KSXkFB/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Solace Claims enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Solace Claims enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Solace Claims", "parentTCRAddress": "0x530c5855a371744bdcB5e728a27Ec709F8598633", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Solace Claims enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXvMFuFeYDe8j2zgKFJDdh1zBLh21LehPEdSiWrVF7ohM/reg-meta-evidence.json"}	{"title": "Add an ad to On-chain Ads", "fileURI": "/ipfs/QmVsfTS5jQJVatgmQX1xciZGRPC8uEAFrry4sNuLK5VhMK/on-chain-svg-ads-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "ads", "description": "address", "isIdentifier": true}, {"type": "link", "label": "documentation", "description": "File with documentation", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmZLeLmM6ssX8pH1z6MguZt5zCCUJJCQnh4GUzbLsH6wCB/klipartz.com.png", "itemName": "ad", "tcrTitle": "On-chain Ads", "isTCRofTCRs": false, "itemNamePlural": "ads", "relTcrDisabled": true, "tcrDescription": "A list of smart contract addresses that hold ads in the form of SVG data returned as base64 ", "requireRemovalEvidence": true}, "question": "Does the ad comply with the required criteria?", "description": "Someone requested to add an ad to On-chain Ads", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the ad complies with the required criteria and should be added.", "Select this if you think the ad does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmSgyEQHdDjx4qAXTw9oDdJFrWYefejsL2cSieJXohGQK4/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from PoC NFT blacklist enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "PoC NFT blacklist enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to PoC NFT blacklist", "parentTCRAddress": "0x651D2759433306b787af1EF601A2c46650c8b38B", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from PoC NFT blacklist enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmPfEnkyjWyLdq9WbqWo8RuCdSYjXSzCPkS1xZP3dN5SLp/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from On-chain Ads enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "On-chain Ads enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to On-chain Ads", "parentTCRAddress": "0x8495Af7A1037271C97942db3Fc0680e642971910", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from On-chain Ads enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmPCvywa4Tb3ruvRvPmLHrVa9xh36NYbT1cyaS6LjxHxpc/clr-meta-evidence.json"}	{"title": "Remove a claim from Solace Claims", "fileURI": "/ipfs/QmZgHnufGfZMWZUfPrXnyrz1zfTVXGEXXtrXQBfSBCVc7N/solace-general-claims-acceptance-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "claimant", "description": "The claimant address for the claim", "isIdentifier": true}, {"type": "long text", "label": "information", "description": "The information about claim", "isIdentifier": false}, {"type": "file", "label": "file", "description": "The detailed information about claim", "allowedFileTypes": "pdf doc"}], "logoURI": "/ipfs/QmYeNGqaKuBMRSC6vyh1QcAEASDZKo6YvyZHw6PMZuJUK2/solace-logo.svg", "itemName": "claim", "tcrTitle": "Solace Claims", "isTCRofTCRs": false, "itemNamePlural": "claims", "relTcrDisabled": true, "tcrDescription": "The submitted claims for Solace protocol", "requireRemovalEvidence": true}, "question": "Does the claim comply with the required criteria?", "description": "Someone requested to remove a claim from Solace Claims", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the claim does not comply with the required criteria and should be removed.", "Select this if you think the claim complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZUU5pit9upoNSgw2baw6YHWatUmwAvcgNSKQsKBA75jR/reg-meta-evidence.json"}	{"title": "Add an item to TB-test 2", "fileURI": "/ipfs/QmR4BjYpp4VtnMj2GoWsgPu28rMuYs7J53Twqv1eUqKHQS/sample.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Github handle", "description": "the github handle the user wants to claim", "isIdentifier": true}, {"type": "address", "label": "address", "description": "The Address that will own the badge", "isIdentifier": true}], "logoURI": "/ipfs/QmXfqESYSDdNDbNvGRm5vsmDxBUSL8pZHVNpTUxGMWU67p/chrismas.jpeg", "itemName": "item", "tcrTitle": "TB-test 2", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "a new test, this time is not going to be list of lists", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to TB-test 2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYK1jMEe2J81jzfn9zbLmqpfe85tSYoechCR2AtGUTYtn/clr-meta-evidence.json"}	{"title": "Remove an item from TB-Test", "fileURI": "/ipfs/QmR4BjYpp4VtnMj2GoWsgPu28rMuYs7J53Twqv1eUqKHQS/sample.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The list address.", "isIdentifier": true}], "logoURI": "/ipfs/QmbzbEpQP5FzKgLdpt8GA9CgkpGoUaMebecefULrUtFaoL/nft.jpeg", "itemName": "item", "tcrTitle": "TB-Test", "isTCRofTCRs": true, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "This is a test to understand how the application works.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from TB-Test", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmURtoCsAeVjxhmS2G91zgaXnMAJvt59qaZ2Ch4xsaWYZM/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to On-chain Ads enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "On-chain Ads enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to On-chain Ads", "parentTCRAddress": "0x8495Af7A1037271C97942db3Fc0680e642971910", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to On-chain Ads enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWw8Htd8xySYd7AVAQUKcJvBunxvjgnLU4P7wqg8gaHnS/clr-meta-evidence.json"}	{"title": "Remove an item from PoC NFT blacklist", "fileURI": "/ipfs/QmdbBDarTAFKwxts4e8vzaHmiJ2Y6dRvx6xjHyiBeV1mfq/kleros-keep-calm.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "NFT contract", "description": "Contract of the NFT in question", "isIdentifier": true}, {"type": "number", "label": "tokenId", "description": "Tokenid of the NFT in question", "isIdentifier": true}], "logoURI": "/ipfs/QmcGTuJrL72aPZmxa2RQQ6QU9AHWdXR8iDTJpP7zxEskLC/juror-onboarding-badge2.png", "itemName": "item", "tcrTitle": "PoC NFT blacklist", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A registry to block NFTs on Curate", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from PoC NFT blacklist", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmevhcvNEMRDpUjJzspUaEUx3oy7LE71znTxLWupw17BRh/reg-meta-evidence.json"}	{"title": "Add an item to PoC NFT blacklist", "fileURI": "/ipfs/QmdbBDarTAFKwxts4e8vzaHmiJ2Y6dRvx6xjHyiBeV1mfq/kleros-keep-calm.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "NFT contract", "description": "Contract of the NFT in question", "isIdentifier": true}, {"type": "number", "label": "tokenId", "description": "Tokenid of the NFT in question", "isIdentifier": true}], "logoURI": "/ipfs/QmcGTuJrL72aPZmxa2RQQ6QU9AHWdXR8iDTJpP7zxEskLC/juror-onboarding-badge2.png", "itemName": "item", "tcrTitle": "PoC NFT blacklist", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A registry to block NFTs on Curate", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to PoC NFT blacklist", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qma1oLG8tgNweiwXUqZ7R3yTRmcqQnwDjkw4nEJErthjgS/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to PoC NFT blacklist enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "PoC NFT blacklist enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to PoC NFT blacklist", "parentTCRAddress": "0x651D2759433306b787af1EF601A2c46650c8b38B", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to PoC NFT blacklist enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"bafyreifisvgel7aawtqdc3wgy7bl74ver7td3ztomkgjecewjen4oxrxoe"}	0
{"ipfsHash":"https://ipfs.kleros.io/ipfs/QmcLcKytsw2ofQvY7GkNsvKrm5t2jQ5QRKZFdtGCHqhD5N/clr-meta-evidence.json"}	0
{"ipfsHash":"https://ipfs.kleros.io/ipfs/QmRPufw3gxM5xMn5Ark6USvYkcoZgoPQosJv3dQ1rzhZkR/reg-meta-evidence.json"}	0
{"ipfsHash":"bafyreiajrbfw2sm7aervqg2nxrjtfiq3bcqoe4qfkt2ldceqlghuein3dq"}	0
{"ipfsHash":"QmagCtJYYrrPMTosus4b3fcEuAPVW19pYHkstBuoZLP9c3/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Test enabled badges", "fileURI": "/ipfs/QmNyrZ6tZQUozA91akgTry2bM7viWwNvKZiHMHVxE5AbFW/a-nh-ma-n-hi-nh-2023-03-18-lu-c-10.38.32.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test", "parentTCRAddress": "0x17d8458c4096F82d2213f8003321925346c5CEDE", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Test enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmX9RJschFz5qMkg1CCPkFeDPx9ZrQ1q5e6qxyJDwTcuWg"}	{"title": "Remove an entry from Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmTXU3TbWzeUa8qD4YqzMYs6r77Utr3S3FW47RaJfT3eTp/Kleros CDN registry policy (v2.2).pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to remove an entry from Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the entry does not comply with the required criteria and should be removed.", "Select this if you think the entry complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbWVqH6kU3YKRSZ3C9mCrUL4q2sLwd9PnKyCpLVHwi1f9/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Registry of unfinished memes enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Registry of unfinished memes enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Registry of unfinished memes", "parentTCRAddress": "0xBFd0dbDB951a3d664F8943989b8dBa04FB8094A2", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Registry of unfinished memes enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmfReB56pUMyQkuYA79aiy1iHPVzapBuEP136AZcWmv5QL/reg-meta-evidence.json"}	{"title": "Add an item to Test", "fileURI": "/ipfs/QmNyrZ6tZQUozA91akgTry2bM7viWwNvKZiHMHVxE5AbFW/a-nh-ma-n-hi-nh-2023-03-18-lu-c-10.38.32.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Test", "description": "T", "isIdentifier": true}], "logoURI": "/ipfs/QmSL9UBiqpfBXbcATKjvahVrFJWGX6YnysMqXeg1qnVDwT/5320f4c8-5933-4add-92d7-e2527dff544d.png", "itemName": "item", "tcrTitle": "Test", "isTCRofTCRs": false, "itemNamePlural": "items", "tcrDescription": "Test", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to Test", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmP4Q3uair7BLbxyoh39sNURBCekhEFBTtQ6qAxbvKHZHh/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Registry of unfinished memes enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Registry of unfinished memes enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Registry of unfinished memes", "parentTCRAddress": "0xBFd0dbDB951a3d664F8943989b8dBa04FB8094A2", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Registry of unfinished memes enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmYGBQEMLZN42vpDCMxrqLC3hGTpRinAa4FRYGEmRwNHZT/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Test enabled badges", "fileURI": "/ipfs/QmNyrZ6tZQUozA91akgTry2bM7viWwNvKZiHMHVxE5AbFW/a-nh-ma-n-hi-nh-2023-03-18-lu-c-10.38.32.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test", "parentTCRAddress": "0x17d8458c4096F82d2213f8003321925346c5CEDE", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Test enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVEdKQRge3mMqT1J5ysWC2Tvco8VrWvmb8D8a5Zi29Q3J/clr-meta-evidence.json"}	{"title": "Remove an item from Test", "fileURI": "/ipfs/QmNyrZ6tZQUozA91akgTry2bM7viWwNvKZiHMHVxE5AbFW/a-nh-ma-n-hi-nh-2023-03-18-lu-c-10.38.32.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Test", "description": "T", "isIdentifier": true}], "logoURI": "/ipfs/QmSL9UBiqpfBXbcATKjvahVrFJWGX6YnysMqXeg1qnVDwT/5320f4c8-5933-4add-92d7-e2527dff544d.png", "itemName": "item", "tcrTitle": "Test", "isTCRofTCRs": false, "itemNamePlural": "items", "tcrDescription": "Test", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from Test", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaEjqhziwC3BtwaweibKJCVwRJLzvUHkfVVMPZjat167j/reg-meta-evidence.json"}	{"title": "Add a meme challenge to Registry of unfinished memes", "fileURI": "/ipfs/QmQyrMrM28GgKs2Qpd6LD9yEbmSbFrVP4yFLMWCdgYXGBq/registry-of-unfinished-memes-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Meme prompt", "description": "A prompt that suggests what the meme should be about (and optionally a metric on its virality on social media).", "isIdentifier": true}], "logoURI": "/ipfs/QmQMQX8oKWP9hAC7VaNYEBa6Q615UA2fbMc3xtrBiiMEsf/download-4-.jpeg", "itemName": "meme challenge", "tcrTitle": "Registry of unfinished memes", "isTCRofTCRs": false, "itemNamePlural": "meme challenges", "relTcrDisabled": true, "tcrDescription": "An joke job bounty system, where no meme challenge is meant to get onto the list :P", "requireRemovalEvidence": true}, "question": "Does the meme challenge comply with the required criteria?", "description": "Someone requested to add a meme challenge to Registry of unfinished memes", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the meme challenge complies with the required criteria and should be added.", "Select this if you think the meme challenge does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVeZ9F91DnyhERcX7NXQX87sECLrPSCBH2v1P2u8ZXwtA/clr-meta-evidence.json"}	{"title": "Remove a meme challenge from Registry of unfinished memes", "fileURI": "/ipfs/QmQyrMrM28GgKs2Qpd6LD9yEbmSbFrVP4yFLMWCdgYXGBq/registry-of-unfinished-memes-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Meme prompt", "description": "A prompt that suggests what the meme should be about (and optionally a metric on its virality on social media).", "isIdentifier": true}], "logoURI": "/ipfs/QmQMQX8oKWP9hAC7VaNYEBa6Q615UA2fbMc3xtrBiiMEsf/download-4-.jpeg", "itemName": "meme challenge", "tcrTitle": "Registry of unfinished memes", "isTCRofTCRs": false, "itemNamePlural": "meme challenges", "relTcrDisabled": true, "tcrDescription": "An joke job bounty system, where no meme challenge is meant to get onto the list :P", "requireRemovalEvidence": true}, "question": "Does the meme challenge comply with the required criteria?", "description": "Someone requested to remove a meme challenge from Registry of unfinished memes", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the meme challenge does not comply with the required criteria and should be removed.", "Select this if you think the meme challenge complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQxqahHvbrQtGt39vydNStNXWZkjDXnQQ6LPeadetjL9V/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Registry of unfinished memes enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Registry of unfinished memes enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Registry of unfinished memes", "parentTCRAddress": "0x37c313450a0681C9D5C347a420209A7CedFCFa20", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Registry of unfinished memes enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmQ6dTqGZKmYuZxCyoiCcaSXAifgdjBv8JSE6ksfqZhLAE/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Registry of unfinished memes enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Registry of unfinished memes enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Registry of unfinished memes", "parentTCRAddress": "0xb733fF7e301be9EA036340A5DBE5De01A3Cc3142", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Registry of unfinished memes enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVNfSuXxW41J4F2hUPd7kmnt33EELPAAMV3Bj1AHb2gUZ/reg-meta-evidence.json"}	{"title": "Add a snap to Test: Registry of Metamask Snaps", "fileURI": "/ipfs/QmQyrMrM28GgKs2Qpd6LD9yEbmSbFrVP4yFLMWCdgYXGBq/registry-of-unfinished-memes-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap npm package name", "description": "The npm package name, including scope (e.g. @kleros/....) if applicable.", "isIdentifier": true}, {"type": "text", "label": "Version", "description": "The version of the package (e.g. 0.1.0, 1.2.5)", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "snap", "tcrTitle": "Test: Registry of Metamask Snaps", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "List of verified Metamask Snaps ", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to add a snap to Test: Registry of Metamask Snaps", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the snap complies with the required criteria and should be added.", "Select this if you think the snap does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmfPyZyc6B75wkwfeqd4VVeF1WfupxztDAd4UsvRVvVX3g/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Registry of unfinished memes enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Registry of unfinished memes enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Registry of unfinished memes", "parentTCRAddress": "0xb733fF7e301be9EA036340A5DBE5De01A3Cc3142", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Registry of unfinished memes enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmPqrbHhczxPrtaFmjHg66YekviVWdxQM2UkTkA5UNRy8X/clr-meta-evidence.json"}	{"title": "Remove a meme challenge from Registry of unfinished memes", "fileURI": "/ipfs/QmQyrMrM28GgKs2Qpd6LD9yEbmSbFrVP4yFLMWCdgYXGBq/registry-of-unfinished-memes-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Meme prompt", "description": "A prompt that suggests what the meme should be about (and optionally a metric on its virality on social media).", "isIdentifier": true}], "logoURI": "/ipfs/QmWEjbFe7s5vewGAPYJBm1NLfeQLhPLj8Yk1Wwskz26aQa/dogecoin-logo.png", "itemName": "meme challenge", "tcrTitle": "Registry of unfinished memes", "isTCRofTCRs": false, "itemNamePlural": "meme challenges", "relTcrDisabled": true, "tcrDescription": "A 'joke' bounty system, where no meme challenge is meant to get onto the list.", "requireRemovalEvidence": true}, "question": "Does the meme challenge comply with the required criteria?", "description": "Someone requested to remove a meme challenge from Registry of unfinished memes", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the meme challenge does not comply with the required criteria and should be removed.", "Select this if you think the meme challenge complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmbet6Fp7dRPLGSsxPgdSYoJKasP9QmDhWgWnnF1eu1GQL/reg-meta-evidence.json"}	{"title": "Add a meme challenge to Registry of unfinished memes", "fileURI": "/ipfs/QmZKtJopw7hJiw8VE8X7au3b93SVVkMu3RKKcChXoPV2qV/registry-of-unfinished-memes-3-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Meme prompt", "description": "A prompt that suggests what the meme should be about (and optionally a metric on its virality on social media).", "isIdentifier": true}], "logoURI": "/ipfs/QmWEjbFe7s5vewGAPYJBm1NLfeQLhPLj8Yk1Wwskz26aQa/dogecoin-logo.png", "itemName": "meme challenge", "tcrTitle": "Registry of unfinished memes", "isTCRofTCRs": false, "itemNamePlural": "meme challenges", "relTcrDisabled": true, "tcrDescription": "A 'joke' bounty system, where no meme challenge is actually meant to get onto the list.", "requireRemovalEvidence": true}, "question": "Does the meme challenge comply with the required criteria?", "description": "Someone requested to add a meme challenge to Registry of unfinished memes", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the meme challenge complies with the required criteria and should be added.", "Select this if you think the meme challenge does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXYz8x9A6xb6rrhKcb1N96KB4vzGhpcF72skLhJ6QSYRD/reg-meta-evidence.json"}	{"title": "Add a meme challenge to Registry of unfinished memes", "fileURI": "/ipfs/QmQyrMrM28GgKs2Qpd6LD9yEbmSbFrVP4yFLMWCdgYXGBq/registry-of-unfinished-memes-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Meme prompt", "description": "A prompt that suggests what the meme should be about (and optionally a metric on its virality on social media).", "isIdentifier": true}], "logoURI": "/ipfs/QmWEjbFe7s5vewGAPYJBm1NLfeQLhPLj8Yk1Wwskz26aQa/dogecoin-logo.png", "itemName": "meme challenge", "tcrTitle": "Registry of unfinished memes", "isTCRofTCRs": false, "itemNamePlural": "meme challenges", "relTcrDisabled": true, "tcrDescription": "A 'joke' bounty system, where no meme challenge is meant to get onto the list.", "requireRemovalEvidence": true}, "question": "Does the meme challenge comply with the required criteria?", "description": "Someone requested to add a meme challenge to Registry of unfinished memes", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the meme challenge complies with the required criteria and should be added.", "Select this if you think the meme challenge does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbMXKjui15vsMmWFaxGLHNVMfkcqArCAQDmPbDuERbiR3/clr-meta-evidence.json"}	{"title": "Remove a meme challenge from Registry of unfinished memes", "fileURI": "/ipfs/QmZKtJopw7hJiw8VE8X7au3b93SVVkMu3RKKcChXoPV2qV/registry-of-unfinished-memes-3-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Meme prompt", "description": "A prompt that suggests what the meme should be about (and optionally a metric on its virality on social media).", "isIdentifier": true}], "logoURI": "/ipfs/QmWEjbFe7s5vewGAPYJBm1NLfeQLhPLj8Yk1Wwskz26aQa/dogecoin-logo.png", "itemName": "meme challenge", "tcrTitle": "Registry of unfinished memes", "isTCRofTCRs": false, "itemNamePlural": "meme challenges", "relTcrDisabled": true, "tcrDescription": "A 'joke' bounty system, where no meme challenge is actually meant to get onto the list.", "requireRemovalEvidence": true}, "question": "Does the meme challenge comply with the required criteria?", "description": "Someone requested to remove a meme challenge from Registry of unfinished memes", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the meme challenge does not comply with the required criteria and should be removed.", "Select this if you think the meme challenge complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbmUnRZGnXFnwSCQ3i96QCWQ6EvHhMBVPoCQw2MatEstV/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Test: Registry of Metamask Snaps enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test: Registry of Metamask Snaps enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test: Registry of Metamask Snaps", "parentTCRAddress": "0xfdB66aD9576842945431c27fe8cB5ef8ed5Cb8BB", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Test: Registry of Metamask Snaps enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmfH5xsv7MTucPbNHJKJtoB6efhsknbnrUPzc51xs6aQEQ/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Registry of unfinished memes enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Registry of unfinished memes enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Registry of unfinished memes", "parentTCRAddress": "0x37c313450a0681C9D5C347a420209A7CedFCFa20", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Registry of unfinished memes enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVNMWi9PXaf3ZHacGufXJexmN7tzHHgz3b2rBq1wrVVzf/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Test: Registry of Metamask Snaps enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test: Registry of Metamask Snaps enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test: Registry of Metamask Snaps", "parentTCRAddress": "0xfdB66aD9576842945431c27fe8cB5ef8ed5Cb8BB", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Test: Registry of Metamask Snaps enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmS4LYyx4yAkRdZgschhsqLG8EaXrhQ44buxQUE6GXXQGi/reg-mm.json"}	{"title": "Add a snap to Test: Registry of Metamask Snaps", "fileURI": "/ipfs/QmakhC1ssjq6C1BjFuLY6zs9X5F5VAAMRq2bEPVG5bZjSJ/metamask-snaps-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap npm package name", "description": "The npm package name, including scope (e.g. @kleros/....) if applicable.", "isIdentifier": true}, {"type": "text", "label": "Version", "description": "The version of the package (e.g. 0.1.0, 1.2.5)", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "snap", "tcrTitle": "Test: Registry of Metamask Snaps", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "List of verified Metamask Snaps ", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to add a snap to Test: Registry of Metamask Snaps", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the snap complies with the required criteria and should be added.", "Select this if you think the snap does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmP5ExZxS6J7KB1QbFQyzVgkJN1CxDYCiPGynVwUR9Fi1U/clr-meta-evidence.json"}	{"title": "Remove an item from  badged list", "fileURI": "/ipfs/QmYFUt3YUpT5WsjPxxCE7pDoK3S7VqHD8zKyUduA7i1dBX/tokens-registry-v2-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Test field", "description": "Nothing", "isIdentifier": true}], "logoURI": "/ipfs/QmU7SU3yXG2i2ssBRGtGwzgJegXLxTvSMACXXUHqBPcfES/tdldw-hu-400x400-1-.png", "itemName": "item", "tcrTitle": " badged list", "isTCRofTCRs": false, "itemNamePlural": "items", "tcrDescription": "test", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from  badged list", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmder5RSdwWYEzWzVzEuUJHVVW5GDhsVogShNcNpc32div/clear-mm.json"}	{"title": "Remove a snap from Test: Registry of Metamask Snaps", "fileURI": "/ipfs/QmakhC1ssjq6C1BjFuLY6zs9X5F5VAAMRq2bEPVG5bZjSJ/metamask-snaps-registry-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap npm package name", "description": "The npm package name, including scope (e.g. @kleros/....) if applicable.", "isIdentifier": true}, {"type": "text", "label": "Version", "description": "The version of the package (e.g. 0.1.0, 1.2.5)", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "snap", "tcrTitle": "Test: Registry of Metamask Snaps", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "List of verified Metamask Snaps ", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to remove a snap from Test: Registry of Metamask Snaps", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the snap does not comply with the required criteria and should be removed.", "Select this if you think the snap complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPv2CEijt2q84rEpBhrQMiQg2HwDb1nuKMrQRewL8SQSG/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Kleros Tokens enabled badges", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0x3C779d45C655EeC6ea220bD4beb66ebAC437cc57", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmP95nn38ZAKEAsUZvBEUbrbg2LyZcF3rKCb5BaHKQR4mS/clr-meta-evidence.json"}	{"title": "Remove a snap from Test: Registry of Metamask Snaps", "fileURI": "/ipfs/QmQyrMrM28GgKs2Qpd6LD9yEbmSbFrVP4yFLMWCdgYXGBq/registry-of-unfinished-memes-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap npm package name", "description": "The npm package name, including scope (e.g. @kleros/....) if applicable.", "isIdentifier": true}, {"type": "text", "label": "Version", "description": "The version of the package (e.g. 0.1.0, 1.2.5)", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "snap", "tcrTitle": "Test: Registry of Metamask Snaps", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "List of verified Metamask Snaps ", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to remove a snap from Test: Registry of Metamask Snaps", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the snap does not comply with the required criteria and should be removed.", "Select this if you think the snap complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmdbGDq1Gr8WduHGLpgzxNdvv6hqR8xfE3jmCqwZnCns1u/reg-meta-evidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of the decimals of the token"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of Tokens living on the blockchain", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQ5DoWUrPWRi2dt9VjvMEmrrSsJfMck6gasN9HNLzbuJA/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Kleros Tokens enabled badges", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0x3C779d45C655EeC6ea220bD4beb66ebAC437cc57", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVceiVKY6oJPijPDSJBJ9KAx1w53gVkcurHK6CNSi4Spt/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags (v2) - alpha version enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags (v2) - alpha version enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags (v2) - alpha version", "parentTCRAddress": "0xa64E8949Ad24259526a32d4BfD53A9f2154ae6bB", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags (v2) - alpha version enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZfbFUSzSvNuVqxMr4qsKJ5LwbHJ1YB8Y4Yj2nkgs1dfo/clr-meta-evidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of the decimals of the token"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of Tokens living on the blockchain", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcwJg8sQ3V6FwBGtf4xY7NsECYpLAevM1aenzqNU7txEJ/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags (v2) - alpha version", "fileURI": "/ipfs/QmWoUQmL4r9b4jbcqiZHPbbMMw67js2pVyhcAiHpDbaWWr/-address-tag-v2-list-guidelines-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The chain-specific hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag ", "description": "The Public Name tag represents a unique and commonly-used name of the smart contract (in the context of the Project, if Project Name is filled in).", "isIdentifier": true}, {"type": "link", "label": "User Interface / Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer.", "isIdentifier": true}, {"type": "long text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag.", "isIdentifier": false}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags (v2) - alpha version", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags (v2) - alpha version", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmNv1r8iUAPwz3MaHYrnQ2DhXvmnjpWNKV3GhRZNAbbegb/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags (v2) - alpha version enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags (v2) - alpha version enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags (v2) - alpha version", "parentTCRAddress": "0xa64E8949Ad24259526a32d4BfD53A9f2154ae6bB", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags (v2) - alpha version enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmRh3DRosRHvvUkXVZ3Nn2jowTVjbJtBgyGJDWwDDfBLUd"}	{"title": "Remove an entry from Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmP3be4kpiNrDx4nV222UsT3sAwi846xNkq4tctTVNJYfJ", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to remove an entry from Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the entry does not comply with the required criteria and should be removed.", "Select this if you think the entry complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWX9dPPe9Stf5QVbxvw2E8kVzRQ75XpEHV3TPYGgSxbED/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags (v2) - alpha version", "fileURI": "/ipfs/QmWoUQmL4r9b4jbcqiZHPbbMMw67js2pVyhcAiHpDbaWWr/-address-tag-v2-list-guidelines-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The chain-specific hexadecimal address of the smart contract being tagged.", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag ", "description": "The Public Name tag represents a unique and commonly-used name of the smart contract (in the context of the Project, if Project Name is filled in).", "isIdentifier": true}, {"type": "link", "label": "User Interface / Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer.", "isIdentifier": true}, {"type": "long text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag.", "isIdentifier": false}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags (v2) - alpha version", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags (v2) - alpha version", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcwyU18GyqDNKLpZghqTz9qZfM3m4zSUYqyY347XKJM6N/reg-meta-evidence.json"}	{"title": "Add a token to Tokens registry (v2) - alpha version", "fileURI": "/ipfs/QmYFUt3YUpT5WsjPxxCE7pDoK3S7VqHD8zKyUduA7i1dBX/tokens-registry-v2-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Token Name", "description": "The name must be the most commonly used name to refer to the asset.", "isIdentifier": true}, {"type": "rich address", "label": "Contract Address", "description": "The chain-specific address of the token in question. Case-sensitive only if required for that chain.", "isIdentifier": true}, {"type": "text", "label": "Ticker", "description": "Ticker of the token in question", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token", "isIdentifier": true}, {"type": "image", "label": "Logo", "description": "The PNG logo for the token of at least 128px X 128px in size.", "isIdentifier": false}], "logoURI": "/ipfs/QmPFoZGxktSmHPoHdVumZVCsumoaHx3rkv9DYiUgUxYyM7/tdldw-hu-400x400-1-removebg-preview.png", "itemName": "token", "tcrTitle": "Tokens registry (v2) - alpha version", "isTCRofTCRs": false, "itemNamePlural": "tokens", "relTcrDisabled": true, "tcrDescription": "A verified registry of tokens for blockchain explorers, wallets and DEXes.", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Tokens registry (v2) - alpha version", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUL3hJbjfYzGkB5pWUBiJmFWy14uWK13nnJxksrhtTzpx/clr-meta-evidence.json"}	{"title": "Remove a token from Tokens registry (v2) - alpha version", "fileURI": "/ipfs/QmYFUt3YUpT5WsjPxxCE7pDoK3S7VqHD8zKyUduA7i1dBX/tokens-registry-v2-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Token Name", "description": "The name must be the most commonly used name to refer to the asset.", "isIdentifier": true}, {"type": "rich address", "label": "Contract Address", "description": "The chain-specific address of the token in question. Case-sensitive only if required for that chain.", "isIdentifier": true}, {"type": "text", "label": "Ticker", "description": "Ticker of the token in question", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token", "isIdentifier": true}, {"type": "image", "label": "Logo", "description": "The PNG logo for the token of at least 128px X 128px in size.", "isIdentifier": false}], "logoURI": "/ipfs/QmPFoZGxktSmHPoHdVumZVCsumoaHx3rkv9DYiUgUxYyM7/tdldw-hu-400x400-1-removebg-preview.png", "itemName": "token", "tcrTitle": "Tokens registry (v2) - alpha version", "isTCRofTCRs": false, "itemNamePlural": "tokens", "relTcrDisabled": true, "tcrDescription": "A verified registry of tokens for blockchain explorers, wallets and DEXes.", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Tokens registry (v2) - alpha version", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYSMXk55PVhxJrDWnzNMoBYngXyNtdoBQzuviPbBTQySJ/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Tokens registry (v2) - alpha version enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Tokens registry (v2) - alpha version enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Tokens registry (v2) - alpha version", "parentTCRAddress": "0x3D0AB3323fE71954E81897f29BD257e47B12b923", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Tokens registry (v2) - alpha version enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmP4kKLyhiKQpTXzbgHRgqPpYqpRaposKFrLB8JZAMNWmH/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Tokens registry (v2) - alpha version enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Tokens registry (v2) - alpha version enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Tokens registry (v2) - alpha version", "parentTCRAddress": "0x3D0AB3323fE71954E81897f29BD257e47B12b923", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Tokens registry (v2) - alpha version enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmaeXsnX2kTzFTUPgdsjpNbLzyALjyGgG8UiqGKASALwSM/clr-meta-evidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of the decimals of the token"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens on the blockchain", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUckSA4KQm4x4XR1xWHrTayMWJ5Xtd63QyEqMCWbDiJZu/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Kleros Tokens enabled badges", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0x50cf00c9E1eC64A264f7a62d9bc0778B0755a44e", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmcby47DM3upE95KLQouRrGTnLYQRYPW9jMtFvJew1nNd9/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Kleros Tokens enabled badges", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0x50cf00c9E1eC64A264f7a62d9bc0778B0755a44e", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVcJUDiLywYkC1oKUymoBuAb1AqCWcjmUErBdTBL89XXJ/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Kleros Tokens enabled badges", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0x70533554fe5c17CAf77fE530f77eAB933B92af60", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZaJFMpHXvrUSNpU27a1WKJM9Q3NL64da6hAxojdYFRk4"}	{"title": "Add an entry to Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmTXU3TbWzeUa8qD4YqzMYs6r77Utr3S3FW47RaJfT3eTp/Kleros CDN registry policy (v2.2).pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to add an entry to Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the entry complies with the required criteria and should be added.", "Select this if you think the entry does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmNmKDyWeTYammbdwDzYyZFNf16iMXLaNLxqGRCQuV9gBR/reg-meta-evidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals to represent token amounts"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens in the blockchain", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVST3ro19ghyTyPzktt2VgMFJcqGSD96Z2PvrL1LhWhCQ/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Kleros Tokens enabled badges", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0x70533554fe5c17CAf77fE530f77eAB933B92af60", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmSN9SibKdh56top75Rcc4wDX8seqnbRTugh8KENoa9K2Z/reg-meta-evidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of the decimals of the token"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens on the blockchain", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmeeePMQJfJ86FMYvc227y67PkeLnWwoEMMryCeo7tUdkQ/clr-meta-evidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals to represent token amounts"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens in the blockchain", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmde2wePgPoBvMHVX7947rZV3E8Z2QDyXgpWVj6yv2N1Md/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0xFD6f0bfa263649c1a7B3cf7F065A279B09BED792", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmaoC9DUbHF3U51TxjJTSec6CXSQNcmbsE5DisUJ4Gstb8/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmbHrNhkdJ378zwMUCa75amtoGa27WruUnb7rzaptmbKzS/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The CAIP-10 address of the smart contract being tagged.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project behind this contract (optional).", "isIdentifier": true}, {"type": "text", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmP5fnmTzVWxSz5nZJsSbS9di6J2v5mtxr49nW8QWR31J4/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0xFD6f0bfa263649c1a7B3cf7F065A279B09BED792", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmcVBSfci62WmBm2RnAmJP7UZmTZDKoCnb3HFgq7fwCQht/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0x3A0046A2035214c91fA2E70FdEA2bD63BeE05529", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmYaLPoeh4BmsQ6iptzbZUC453u5XReLRWok8jqmPhJ7Hx/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmbHrNhkdJ378zwMUCa75amtoGa27WruUnb7rzaptmbKzS/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The CAIP-10 address of the smart contract being tagged.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project behind this contract (optional).", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPmYnee9Lht8cQ96yD3arAMiL4mrU1mR7a15p4pjzGegA/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0x3A0046A2035214c91fA2E70FdEA2bD63BeE05529", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmY7sNyJc8KwMcFSeLbpTNut4DZUnshmz1uDdicSVvUEPK/reg-meta-evidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmbHrNhkdJ378zwMUCa75amtoGa27WruUnb7rzaptmbKzS/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The CAIP-10 address of the smart contract being tagged.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project behind this contract (optional).", "isIdentifier": true}, {"type": "text", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXDUyg1JrwFiGgaSNBNPiMVhQkdXy3hLcenxam1teLxfE/clr-meta-evidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmbHrNhkdJ378zwMUCa75amtoGa27WruUnb7rzaptmbKzS/address-tags-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The CAIP-10 address of the smart contract being tagged.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project behind this contract (optional).", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with Ethereum mainnet contract addresses.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmTm7i98mAjiEHLKBPcaii2WcZSECyazeaqUgaZVgnicpy/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0x66260C69d03837016d88c9877e61e08Ef74C59F2", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmawuTtZhZgGmggDf4EABeW3ZtVkLCzGMrw3pmXpqnJ2uo/reg-meta-evidence.json"}	{"title": "Add an item to  badged list", "fileURI": "/ipfs/QmYFUt3YUpT5WsjPxxCE7pDoK3S7VqHD8zKyUduA7i1dBX/tokens-registry-v2-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Test field", "description": "Nothing", "isIdentifier": true}], "logoURI": "/ipfs/QmU7SU3yXG2i2ssBRGtGwzgJegXLxTvSMACXXUHqBPcfES/tdldw-hu-400x400-1-.png", "itemName": "item", "tcrTitle": " badged list", "isTCRofTCRs": false, "itemNamePlural": "items", "tcrDescription": "test", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to  badged list", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qma6TmLQwwLtoTtvztD7CH55Ej35ugL9h8JDc8RYfCpsZa/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to  badged list enabled badges", "fileURI": "/ipfs/Qmcc2v5otWXhoJBAbiCkZmXnyKEggXLgeREadsSKCh34Y6/-address-tag-v2-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": " badged list enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to  badged list", "parentTCRAddress": "0x979ffFb046Cd090A92c6f73EC3E1420Ad08eef30", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to  badged list enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmY2DuZBxY6MeyVb7z2v4mTg4shPBDPgSBchrYKB4gbqMf/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from  badged list enabled badges", "fileURI": "/ipfs/Qmcc2v5otWXhoJBAbiCkZmXnyKEggXLgeREadsSKCh34Y6/-address-tag-v2-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": " badged list enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to  badged list", "parentTCRAddress": "0x979ffFb046Cd090A92c6f73EC3E1420Ad08eef30", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from  badged list enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmeW932TaZHf46Zk7eJemdvS6v5XYRhSm3wbjD82njHX8r/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags", "parentTCRAddress": "0x66260C69d03837016d88c9877e61e08Ef74C59F2", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmeoRqsghS7LNGdAeWnhmuRapMtc2LRshdmXJdS5mYwH3F/registration-metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmQNMntc1gMmtSR5AZxbB9g2W2qcvnd9beytCRQ7HeP8mN/tokens-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZAzU3c7nNQ5nbhdtkbVEZuxfHRapaX9LKgRVTTgvX2NQ"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/Qmak6tHNB4q1Y2ihYde9bZqKaB2wy8mRZ53ChnpCSRfiXR", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPRDv7cT4ReyQPLFH7SXa8shyDajMqr34pDtbGJxaZDQk"}	{"title": "Add an entry to Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmP3be4kpiNrDx4nV222UsT3sAwi846xNkq4tctTVNJYfJ", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to add an entry to Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the entry complies with the required criteria and should be added.", "Select this if you think the entry does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUdpeNNebfaSdNa145rk3dqUTfDviWwjnRSFZwKL4uXDP"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/Qmak6tHNB4q1Y2ihYde9bZqKaB2wy8mRZ53ChnpCSRfiXR", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUzjvVAHgecPv6uiTvfpMs9Lf4fPTK752FDwNBmwQbFrC"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmSaJWBFGGZ3FussTi6MqfXrMsaE75asumR2LLuAZFcrSf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmey1eg1hsoof8kPJA32StSqeJdvvQXfBCBuwo12i13wJa"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmSaJWBFGGZ3FussTi6MqfXrMsaE75asumR2LLuAZFcrSf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQyFBC7viC6ZjmaDhwF7sEdoFbDgv1bsgnn1jy5GMzbVA/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Kleros Tokens enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0xd81D2b364F82e1d53400c070E63D541543091Bf0", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmb3X6pAnUB979FSfgjar5Z7faYe43aXjhf2Zkxtk3Q9SH/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Kleros Tokens enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0xd81D2b364F82e1d53400c070E63D541543091Bf0", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmdWFrjST9iehpyrFgoebYL4AhZUCmT7k9JdRd37d2TY6j/reg-meta-evidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmPF47EH7MTfnKUvrb1rht9qxvita3cZxhkUYRKSjTyrWG/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals to represent token amounts"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "relTcrDisabled": true, "tcrDescription": "A list of tokens and their contract addresses across various blockchains.", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPLcxeNgoNqfeN6Q8V51w5cXSEAzkpjSkDVS7P2QsxgCP/clr-meta-evidence.json"}	{"title": "Remove an item from Test PM", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmWP4CXeKqxBygpwo4aGP3rZK4u3Kd7r3tHH7Bng66Wpwt/new-project-1-.png", "itemName": "item", "tcrTitle": "Test PM", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of images for markets and outcomes.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from Test PM", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmV1nrLtY9kgfWDoYJn24qHRetpf2v8k2s8cZ8KzKFNdMq/clr-meta-evidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmPF47EH7MTfnKUvrb1rht9qxvita3cZxhkUYRKSjTyrWG/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals to represent token amounts", "isIdentifier": false}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "relTcrDisabled": true, "tcrDescription": "A list of tokens and their contract addresses across various blockchains.", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmT67QEFoiWUnpcMaxt2KXvtcZfgP9f88K2nzunBUe4hmU/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Kleros Tokens enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0xeE1502e29795Ef6C2D60F8D7120596abE3baD990", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXJKoZPAZVLjZwc3wNo9vV7qniqHtrQPW74RAYpsmkuwM/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Kleros Tokens enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Kleros Tokens enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Kleros Tokens", "parentTCRAddress": "0xeE1502e29795Ef6C2D60F8D7120596abE3baD990", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Kleros Tokens enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmSLsKh2UkqJSB2p7c69KZHgz8QVQzSyGKJ6XDGAXNX58F/clr-meta-evidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmPF47EH7MTfnKUvrb1rht9qxvita3cZxhkUYRKSjTyrWG/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals to represent token amounts"}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "relTcrDisabled": true, "tcrDescription": "A list of tokens and their contract addresses across various blockchains.", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmeQRYREtuWmu5ABJJqnra9BT9G8vBsGpRhsF8s5JmPZJJ/reg-meta-evidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmPF47EH7MTfnKUvrb1rht9qxvita3cZxhkUYRKSjTyrWG/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Address", "description": "The smart contract address of the token", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals to represent token amounts", "isIdentifier": false}, {"type": "image", "label": "Logo", "description": "The logo of the token", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "relTcrDisabled": true, "tcrDescription": "A list of tokens and their contract addresses across various blockchains.", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":" /ipfs/QmcwJg8sQ3V6FwBGtf4xY7NsECYpLAevM1aenzqNU7txEJ/clr-meta-evidence.json"}	0
{"ipfsHash":"QmPxaeVLCvHUDn71vrZQGqZanddph8FBjxoPpL2QkEfEUK/removal-metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmQNMntc1gMmtSR5AZxbB9g2W2qcvnd9beytCRQ7HeP8mN/tokens-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZ6mzWzWtiZcpujPqhjnA3xBqDEEAzQuUyJGE6knNdwti"}	{"name": "Fiverr.com Account Owner", "title": "Remove a Fiverr.com Account Owner from Fiverr.com Account Owners", "fileURI": "ipfs/QmVzedY9rjDB5KzDU1gQWikwTqp3oJBRbRs96GiMcAhX8t", "category": "Badge Dispute", "metadata": {"columns": [{"type": "link", "label": "Profile Link", "description": "Provide the link to your public profile of Fiverr.com. Make sure that you add your wallet address in your Profile's Description."}], "logoURI": "ipfs/QmZFPPKLhKWs4SgcAcaffmR9Pz2NGrjSzTUanbcN7Lgw3o", "itemName": "Fiverr.com Account Owner", "tcrTitle": "Fiverr.com Account Owner", "isTCRofTCRs": false, "itemNamePlural": "Fiverr.com Account Owners", "relTcrDisabled": true, "tcrDescription": "This badge certifies that its owner has a fiverr.com Profile.", "requireRemovalEvidence": true}, "question": "Does the Fiverr.com Account Owner comply with the required criteria?", "description": "Someone requested to remove a Fiverr.com Account Owner from the list of Fiverr.com Account Owners, because it doesnt complain with the required criteria on the ruling file", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the Fiverr.com Account Owner does not comply with the required criteria and should be removed.", "Select this if you think the Fiverr.com Account Owner complies with the required criteria and should not be removed."]}, "dynamicScriptURI": "ipfs/QmZ8gHDHenMHZ6WWCHTF3tn2NEhiP15Q5JK7kSCq1SM8x6", "fileTypeExtension": "pdf", "dynamicScriptRequiredParams": ["disputeID", "arbitrableChainID", "arbitrableContractAddress"], "evidenceDisplayInterfaceURI": "https://staging-app.thebadge.xyz/evidence"}
{"ipfsHash":"QmTFjSQaV8vVLFhJPE5CEBph3xiYomA51RXRo3HLecKFv1"}	{"name": "Fiverr.com Account Owner", "title": "Fiverr.com Account Owner evidences is valid according to the ruling file?", "fileURI": "ipfs/QmVzedY9rjDB5KzDU1gQWikwTqp3oJBRbRs96GiMcAhX8t", "category": "Badge Dispute", "metadata": {"columns": [{"type": "link", "label": "Profile Link", "description": "Provide the link to your public profile of Fiverr.com. Make sure that you add your wallet address in your Profile's Description."}], "logoURI": "ipfs/QmZFPPKLhKWs4SgcAcaffmR9Pz2NGrjSzTUanbcN7Lgw3o", "itemName": "Fiverr.com Account Owner", "tcrTitle": "Fiverr.com Account Owner", "isTCRofTCRs": false, "itemNamePlural": "Fiverr.com Account Owners", "relTcrDisabled": true, "tcrDescription": "This badge certifies that its owner has a fiverr.com Profile.", "requireRemovalEvidence": true}, "question": "Does the Fiverr.com Account Owner comply with the required criteria?", "description": "The evidence provided on the badge Fiverr.com Account Owner need to be what the Fiverr.com Account Owner ruling file ask for.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the Fiverr.com Account Owner complies with the required criteria and should be added.", "Select this if you think the Fiverr.com Account Owner does not comply with the required criteria and should not be added."]}, "dynamicScriptURI": "ipfs/QmZ8gHDHenMHZ6WWCHTF3tn2NEhiP15Q5JK7kSCq1SM8x6", "fileTypeExtension": "pdf", "dynamicScriptRequiredParams": ["disputeID", "arbitrableChainID", "arbitrableContractAddress"], "evidenceDisplayInterfaceURI": "https://staging-app.thebadge.xyz/evidence"}
{"ipfsHash":"QmaAvTALCM88g9SBdftEkckAmHqQoXMXL92hPTxNkbEocC/registration-metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmSxGYpXHBWBGvGnBeZD1pFxh8fRHj4Z7o3fBzrGiqNx4v/tokens-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWFGPLq7gQaBTw7o9nzheKAPQhsNenfTL3jui66nLTDWU/removal-metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmSxGYpXHBWBGvGnBeZD1pFxh8fRHj4Z7o3fBzrGiqNx4v/tokens-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"ipfs://registrationMetaEvidence"}	0
{"ipfsHash":"ipfs://clearingMetaEvidence"}	0
{"ipfsHash":"Qmadt8FuZUogEJE8z1uQXeH91T111t1Wi3LVd9oc6ExijA/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags Query (ATQ) registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Query (ATQ) registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Query (ATQ) registry", "parentTCRAddress": "0x6945926287b2f581018D63Aa8C7f027ea241201A", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags Query (ATQ) registry enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmbDsmHdmmV2rQW6iUj5m16MXPDq5Q2TPwJPB9QRD4GHxS/clr-meta-evidence.json"}	{"title": "Remove a module from Address Tags Query (ATQ) registry", "fileURI": "/ipfs/QmWdSv2tDq2kE5hj4CC8MRPw51t5uqNJdyLp4FfbSczGex/-address-tag-query-list-guidelines-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github repo URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned . ", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules for programmatically retrieving large numbers of Address Tags for EVM contracts", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query (ATQ) registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmfQ9SLLn8ssCHaLzRZtk7YtUSjfyaczmaxcf4RH63WNN4/reg-meta-evidence.json"}	{"title": "Add a module to Address Tags Query (ATQ) registry", "fileURI": "/ipfs/QmWdSv2tDq2kE5hj4CC8MRPw51t5uqNJdyLp4FfbSczGex/-address-tag-query-list-guidelines-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github repo URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned . ", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules for programmatically retrieving large numbers of Address Tags for EVM contracts", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query (ATQ) registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcxTGRTp1F8vb6zic3hSaRb9T8VMrtrE6rY6iNX7GfyAX/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Test PM enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test PM enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test PM", "parentTCRAddress": "0x908cF1d9011e67302678B0314C301DAC7d2ffebC", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Test PM enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWJa9ajwXoh1DDwGFc39sUPxbH8744stnf4cwZLTWsLes/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags Query (ATQ) registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Query (ATQ) registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Query (ATQ) registry", "parentTCRAddress": "0x6945926287b2f581018D63Aa8C7f027ea241201A", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags Query (ATQ) registry enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmSxn2fgkUKvFuWXj5D9T1fbHK3F5tNF7Mz6NmQKjkWATE/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Test PM enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test PM enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test PM", "parentTCRAddress": "0x908cF1d9011e67302678B0314C301DAC7d2ffebC", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Test PM enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZjCmvFMmuoLqHPx93NJXkW8KUd7NeKRGMDo2cGJkBkwt/reg-meta-evidence.json"}	{"title": "Add an item to Test PM", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images", "isIdentifier": false, "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmePMs1dWzAyCFXdAi99cSWf7sE7Uv2ba51kGBsiBvgvsc/new-project-3-.png", "itemName": "item", "tcrTitle": "Test PM", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of images for markets and outcomes", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to Test PM", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRwsPqL1wm6hmtrPGQ2TeuVqBB2NteLxvZVNTH8pd4Rb4/clr-meta-evidence.json"}	{"title": "Remove an item from Test PM", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images", "isIdentifier": false, "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmePMs1dWzAyCFXdAi99cSWf7sE7Uv2ba51kGBsiBvgvsc/new-project-3-.png", "itemName": "item", "tcrTitle": "Test PM", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of images for markets and outcomes", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from Test PM", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXrpatVByp3wuczWAaJmPWt1zEqQrtzT9YVVM37MpZVmr/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Test PM enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test PM enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test PM", "parentTCRAddress": "0xb946caAbB0B80800B941dc73Fb3C78b9bFFbC777", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Test PM enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmeL2wDHgLAX7S3guGn4YFyRaX8sCufvQQNkBJgEKSZN5n/reg-meta-evidence.json"}	{"title": "Add an item to Test PM", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmSr4WgTPcFbhyzzeYcs8xgXTkYMJwYbsCoSvKvrQ9RoCc/new-project-2-.png", "itemName": "item", "tcrTitle": "Test PM", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of images for markets and outcomes.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to Test PM", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVEfuZfZBwSW4Rpn3GCtfiNjhpwaNTZBNArhUiCGox4iD/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Test PM enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test PM enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test PM", "parentTCRAddress": "0xb946caAbB0B80800B941dc73Fb3C78b9bFFbC777", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Test PM enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmQiepNWkyLEVLKibbqCeTzKnQKdzGvj1eptxfy9qVVshS/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Test PM enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test PM enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test PM", "parentTCRAddress": "0x77B18a72b23F5Ce85Afb11e4Ef2dbDd0691e5cf7", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Test PM enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXTCkg17tg8Ly1temWnj1QzwDJinkCeY4v3hjhgXWLa9u/clr-meta-evidence.json"}	{"title": "Remove an item from Test PM", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmSr4WgTPcFbhyzzeYcs8xgXTkYMJwYbsCoSvKvrQ9RoCc/new-project-2-.png", "itemName": "item", "tcrTitle": "Test PM", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of images for markets and outcomes.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from Test PM", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmSCQXRUFEa1waPGgRao3Rn6WnGGuSYt7AYngV4Z28twbf/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Test PM enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Test PM enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Test PM", "parentTCRAddress": "0x77B18a72b23F5Ce85Afb11e4Ef2dbDd0691e5cf7", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Test PM enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZPLV213r3QWLC4UAqbxz8qZ1HuL3MDVFdB4qWPqWv2ht/reg-meta-evidence.json"}	{"title": "Add an item to Test PM", "fileURI": "/ipfs/QmUPsjDcKxNv6z6ktnmxkSb4LpqmQ7DT12yG5B73z9uLEy/curated-lists-primary-document.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmWP4CXeKqxBygpwo4aGP3rZK4u3Kd7r3tHH7Bng66Wpwt/new-project-1-.png", "itemName": "item", "tcrTitle": "Test PM", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of images for markets and outcomes.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to Test PM", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmT9Un5zEWohtiwy6WFBP7yueowVbYsu4jgNNRq3zmtPgi/clr-meta-evidence.json"}	{"title": "Remove a module from Address Tags Queries (ATQ) registry v0.2", "fileURI": "/ipfs/QmR55B6bTmap5EfjMFGrVr16tTnyX7hsVuZ2xdom9hz9Hj/atq-registry-temporary.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. "}], "logoURI": "/ipfs/QmTYC784wxD1ruxydVRbePVJ6fqzUKgKaRtjVodNyfwofw/kleros-logo-white.png", "itemName": "module", "tcrTitle": "Address Tags Queries (ATQ) registry v0.2", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Queries (ATQ) registry v0.2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVArwozvywa2CVUAgBm9JEPPNaKVzAoDM6Qg6coC7wQ8w/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags Queries (ATQ) registry v0.2 enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Queries (ATQ) registry v0.2 enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Queries (ATQ) registry v0.2", "parentTCRAddress": "0x4577BE6550e7eb4b074bDAcbE4dd44c9245a9bF3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags Queries (ATQ) registry v0.2 enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmdhC13R5vus2K9KzrpXFZhC2uep2JSb3Y43AT75JZxDic"}	{"title": "Add a module to Address Tags Query (ATQ) registry", "fileURI": "/ipfs/QmQ66imf6QtCXzZeHbcJLPNmmfcKjMbk5dhCtktki9t7B5", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github repo URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned . ", "isIdentifier": true}], "logoURI": "/ipfs/QmchdA5tQLAYzximbXBjzSgbjkQFNcpzQjRiCEvRiqfXt6/icon-2-.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules for programmatically retrieving large numbers of Address Tags for EVM contracts", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query (ATQ) registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmfQrJC97aezyEGJs6mAgrjyNKNQvdQXaDyGunKwGVBymZ/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags Queries (ATQ) registry v0.2 enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Queries (ATQ) registry v0.2 enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Queries (ATQ) registry v0.2", "parentTCRAddress": "0x4577BE6550e7eb4b074bDAcbE4dd44c9245a9bF3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags Queries (ATQ) registry v0.2 enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmdio8ZfMFUsQ2wQR3EFSCwCfgpNksVXU9imwjdkMaGn87"}	{"title": "Add a module to Address Tags Queries (ATQ) registry v0.2", "fileURI": "/ipfs/QmVhSuDMjxiH3H7TyTbTFdMmYhRnwbCwhCwMZfZJ2JaPQ6", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. "}], "logoURI": "/ipfs/QmTYC784wxD1ruxydVRbePVJ6fqzUKgKaRtjVodNyfwofw/kleros-logo-white.png", "itemName": "module", "tcrTitle": "Address Tags Queries (ATQ) registry v0.2", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Queries (ATQ) registry v0.2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmTXi1oVtPL27ciNgYLhCgXUWS91qfaLZD5t6ErmiGWYPd"}	{"title": "Remove a module from Address Tags Queries (ATQ) registry v0.2", "fileURI": "/ipfs/QmVhSuDMjxiH3H7TyTbTFdMmYhRnwbCwhCwMZfZJ2JaPQ6", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. "}], "logoURI": "/ipfs/QmTYC784wxD1ruxydVRbePVJ6fqzUKgKaRtjVodNyfwofw/kleros-logo-white.png", "itemName": "module", "tcrTitle": "Address Tags Queries (ATQ) registry v0.2", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Queries (ATQ) registry v0.2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmP6CL6RavjqZAxsYr43h8yCx2RDQJm7J3ETJJKHfRUXY2/reg-meta-evidence.json"}	{"title": "Add a module to Address Tags Queries (ATQ) registry v0.2", "fileURI": "/ipfs/QmR55B6bTmap5EfjMFGrVr16tTnyX7hsVuZ2xdom9hz9Hj/atq-registry-temporary.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. "}], "logoURI": "/ipfs/QmTYC784wxD1ruxydVRbePVJ6fqzUKgKaRtjVodNyfwofw/kleros-logo-white.png", "itemName": "module", "tcrTitle": "Address Tags Queries (ATQ) registry v0.2", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Queries (ATQ) registry v0.2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmdP6YGw5bjJAhm7LbhCMWn9wx97j4Nj3ynKkgQHzHhpf8/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags Query Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Query Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Query Registry", "parentTCRAddress": "0x9FE4D9E4989ad031FDc424d8C34D77E70aA0b269", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags Query Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmdkYi6TTfZvSNmh3XUTkAVzFJMqf1L6iGm4o3sPwdfhX8/clr-meta-evidence.json"}	{"title": "Remove a module from Address Tags Query Registry", "fileURI": "/ipfs/QmWddFtn36VkcR8uxwfZfdgavdd5QbLxzP6R3R9YptFeCF/-address-tag-query-list-guidelines-3-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQHfv1UGz45tKNt2KPwKBQ47mU1g6XkCJst9ZaUsyvnd6/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags Query Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Query Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Query Registry", "parentTCRAddress": "0x9FE4D9E4989ad031FDc424d8C34D77E70aA0b269", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags Query Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qme1e4sKGRQPQmh7sJ1HzA4xH4rSG67cippgiu3LJBmSoW"}	{"title": "Add a module to Address Tags Query Registry", "fileURI": "/ipfs/QmbbvX1XcMS45SoMVsVduSYEXCjFHqGiypkVHYuK9dm5oC", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmV2jkH4Lt89pLHoMx1vt9Qz3kb43487G3yMFtHjPnq5Hn/clr-meta-evidence.json"}	{"title": "Remove a domain from Decentralized Domain Blacklist Registry", "fileURI": "/ipfs/QmVguR8A58dWz5UEiWFhTeAJJZmeBgJh7Zuh7rf3iyX3ko/decentralized-domain-blacklist-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Subdomain", "description": "The subdomain to be blocked (mostly linked to an ENS, but not always)", "isIdentifier": true}, {"type": "text", "label": "Blockchain DNS service", "description": "The root domain of the blockchain domain name service that this entry pertains to", "isIdentifier": true}, {"type": "text", "label": "Countries/Regions to block for", "description": "The 3-letter ISO country code referring to the countries where this subdomain should be blocked for. ‘EUR’ can be used to represent all European Union countries, and ‘EEA’ to represents member of the European Economic Area.", "isIdentifier": true}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "domain", "tcrTitle": "Decentralized Domain Blacklist Registry", "isTCRofTCRs": false, "itemNamePlural": "domains", "relTcrDisabled": true, "tcrDescription": "A list of blacklisted subdomains that should be blocked on blockchain domain name services.", "requireRemovalEvidence": true}, "question": "Does the domain comply with the required criteria?", "description": "Someone requested to remove a domain from Decentralized Domain Blacklist Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the domain does not comply with the required criteria and should be removed.", "Select this if you think the domain complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRpPAfMAHyZwt3oBr7obvrJDFskfpYWRSxjS2HMmzBZqR/reg-meta-evidence.json"}	{"title": "Add a domain to Decentralized Domain Blacklist Registry", "fileURI": "/ipfs/QmVguR8A58dWz5UEiWFhTeAJJZmeBgJh7Zuh7rf3iyX3ko/decentralized-domain-blacklist-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Subdomain", "description": "The subdomain to be blocked (mostly linked to an ENS, but not always)", "isIdentifier": true}, {"type": "text", "label": "Blockchain DNS service", "description": "The root domain of the blockchain domain name service that this entry pertains to", "isIdentifier": true}, {"type": "text", "label": "Countries/Regions to block for", "description": "The 3-letter ISO country code referring to the countries where this subdomain should be blocked for. ‘EUR’ can be used to represent all European Union countries, and ‘EEA’ to represents member of the European Economic Area.", "isIdentifier": true}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "domain", "tcrTitle": "Decentralized Domain Blacklist Registry", "isTCRofTCRs": false, "itemNamePlural": "domains", "relTcrDisabled": true, "tcrDescription": "A list of blacklisted subdomains that should be blocked on blockchain domain name services.", "requireRemovalEvidence": true}, "question": "Does the domain comply with the required criteria?", "description": "Someone requested to add a domain to Decentralized Domain Blacklist Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the domain complies with the required criteria and should be added.", "Select this if you think the domain does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPHEM8peTuN7ZzcTWHgFR8AmzkWf49GWJcATxyP36Thg6/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Decentralized Domain Blacklist Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Decentralized Domain Blacklist Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Decentralized Domain Blacklist Registry", "parentTCRAddress": "0xFDB6313B55E8B793967BD2BE25C8AbD08ffc83f3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Decentralized Domain Blacklist Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmUzj83mCwV9624c69P89hKa891kffNFPMhE22VdBLqqHH"}	{"title": "Remove a module from Address Tags Query Registry", "fileURI": "/ipfs/Qmb7ZJrJGdNUreBh6e8hrNRpBKCRAgTpkTCZLqcLUV3NW9", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWV526kBZbZULu1ZE9xFDhW5qHNWpPZggCw9FKmXA4ckV"}	{"title": "Remove a module from Address Tags Query Registry", "fileURI": "/ipfs/QmbbvX1XcMS45SoMVsVduSYEXCjFHqGiypkVHYuK9dm5oC", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaqBJ54bPx6xRHZHjQQbPrR6tu6SWjU2wK6DQtQYRcYqP/reg-meta-evidence.json"}	{"title": "Add a module to Address Tags Query Registry", "fileURI": "/ipfs/QmWddFtn36VkcR8uxwfZfdgavdd5QbLxzP6R3R9YptFeCF/-address-tag-query-list-guidelines-3-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmR4RyQGRft1dcR9oFCggZ5v4qEhCdpcTknrXPA91z94x1/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Decentralized Domain Blacklist Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Decentralized Domain Blacklist Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Decentralized Domain Blacklist Registry", "parentTCRAddress": "0xFDB6313B55E8B793967BD2BE25C8AbD08ffc83f3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Decentralized Domain Blacklist Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmQUUPMPyq2GdTorShXMZkMProbGWz7nZEecboTXtzeCSS"}	{"title": "Add a module to Address Tags Query Registry", "fileURI": "/ipfs/Qmb7ZJrJGdNUreBh6e8hrNRpBKCRAgTpkTCZLqcLUV3NW9", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVggpiCnCiBuVh2ktCpBBXrapHb87eJmVZpPHRrPaVuhr"}	{"title": "Add a module to Address Tags Query Registry", "fileURI": "/ipfs/QmTTMQwAPLLbF8QnYrux7FEBTMcEsRSiTwPJyiNRuD1MKt", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmcgKFBHpAbywNQrfUJcX8DUmqDjL9UDmB8d2NWhEVFj6H"}	{"title": "Remove a module from Address Tags Query Registry", "fileURI": "/ipfs/QmTTMQwAPLLbF8QnYrux7FEBTMcEsRSiTwPJyiNRuD1MKt", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "Chain ID", "description": "The EVM integer Chain ID of the chain that the contracts being retrieved by the function in this module are on. This is informational only and not used as input for the functions.", "isIdentifier": true}, {"type": "boolean", "label": "Available on The Graph’s hosted service", "description": "Boolean value indicating if the function can be called in an unauthenticated manner using The Graph’s hosted (unauthenticated) service.", "isIdentifier": true}, {"type": "boolean", "label": "Available on the decentralized Graph Network", "description": "Boolean value indicating if the function can make use of indexed data from the decentralized Graph Network.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbAn7krVFyEMdVzbhbzifgo6BGEjBEN4LVHJocBrzhBCc/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Address Tags Query (ATQ) Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Query (ATQ) Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Query (ATQ) Registry", "parentTCRAddress": "0xAe6aaed5434244be3699c56E7Ebc828194F26dc3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Address Tags Query (ATQ) Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmX4bNK9gxwAstuUR9hmtjkFJZQq7VtDd3jiSCJUzQe78X/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Address Tags Query (ATQ) Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Address Tags Query (ATQ) Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Address Tags Query (ATQ) Registry", "parentTCRAddress": "0xAe6aaed5434244be3699c56E7Ebc828194F26dc3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Address Tags Query (ATQ) Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmbBMM9vcWyRdv9NkjVfDsuCtLBSA8p8K4Qz7YoeM2USc9/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Metamask Snaps - \\"Seems Secure\\" list enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Metamask Snaps - \\"Seems Secure\\" list", "parentTCRAddress": "0x43adac2FA0FdF58Ca585B0e0f4c9914A06ea80E0", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Metamask Snaps - \\"Seems Secure\\" list enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmcvWMPbQNsungjS5USFNxxG3YKk54w6dzaTw3DhXXAbf6/reg-meta-evidence.json"}	{"title": "Add a module to Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmXbWTGRhiiHorECi6BFcHUWUTpRsYTwMES7mp4PjJkQQS/-address-tag-query-list-guidelines-12-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmdvC5gkbHFLuLvLUy4ccTHHnVf2GoU2sWSoMuD5nt7xHD/clr-meta-evidence.json"}	{"title": "Remove a snap from Metamask Snaps - \\"Seems Secure\\" list", "fileURI": "/ipfs/QmcXdPkisNwCaSoSUTwZe2zJqAw51QBkoJkgJRvdhdTiB4/metamask-snaps-secure-badge.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap name ", "description": "The name of the Snap as displayed in the MetaMask Snaps permissionless directory.", "isIdentifier": true}, {"type": "link", "label": "MetaMask Directory Link", "description": "The link to the Snap in the MetaMask permissionless directory", "isIdentifier": true}, {"type": "link", "label": "Repository URL", "description": "The public repository that hosts the Snap’s source code, which must not contain MORE THAN 500 LINES OF CODE IN INDEX.TS IF NO EXTERNAL AUDIT HAS BEEN DONE (EXCLUDING COMMENTS).", "isIdentifier": true}, {"type": "text", "label": "Git commit hash", "description": "The hash of the specific commit to be referenced in this repository."}, {"type": "text", "label": "npm package name", "description": "The name of the npm package of the published Snap. ", "isIdentifier": true}, {"type": "text", "label": "npm package version", "description": "The version of the package (e.g. 0.1.0, 1.2.5).", "isIdentifier": false}, {"type": "link", "label": "Snap audit report", "description": "If the Snap uses one or more of the key management API methods, a PDF or URL of the audit report is required. If the Snap doesn't require an audit, this field may be left blank."}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "snap", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "A list of Metamask Snaps that have passed the basic security and/or audit requirements set out by Metamask", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to remove a snap from Metamask Snaps - \\"Seems Secure\\" list", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the snap does not comply with the required criteria and should be removed.", "Select this if you think the snap complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVp5YyGVPxLBEAAaiE32Azz3kg2xnvhfr6JdQg4PtJccm/clr-meta-evidence.json"}	{"title": "Remove a module from Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmXbWTGRhiiHorECi6BFcHUWUTpRsYTwMES7mp4PjJkQQS/-address-tag-query-list-guidelines-12-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVbfujWb16q3xXyYA2b3QrMFB8AjKzG4in1C3CjVvrhHz/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Metamask Snaps - \\"Seems Secure\\" list enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Metamask Snaps - \\"Seems Secure\\" list", "parentTCRAddress": "0x43adac2FA0FdF58Ca585B0e0f4c9914A06ea80E0", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Metamask Snaps - \\"Seems Secure\\" list enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWqALL77hUuVfuxMsK2ZaUqKMiNEWUkBKV8qXdcS112iW/reg-meta-evidence.json"}	{"title": "Add a snap to Metamask Snaps - \\"Seems Secure\\" list", "fileURI": "/ipfs/QmcXdPkisNwCaSoSUTwZe2zJqAw51QBkoJkgJRvdhdTiB4/metamask-snaps-secure-badge.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap name ", "description": "The name of the Snap as displayed in the MetaMask Snaps permissionless directory.", "isIdentifier": true}, {"type": "link", "label": "MetaMask Directory Link", "description": "The link to the Snap in the MetaMask permissionless directory", "isIdentifier": true}, {"type": "link", "label": "Repository URL", "description": "The public repository that hosts the Snap’s source code, which must not contain MORE THAN 500 LINES OF CODE IN INDEX.TS IF NO EXTERNAL AUDIT HAS BEEN DONE (EXCLUDING COMMENTS).", "isIdentifier": true}, {"type": "text", "label": "Git commit hash", "description": "The hash of the specific commit to be referenced in this repository."}, {"type": "text", "label": "npm package name", "description": "The name of the npm package of the published Snap. ", "isIdentifier": true}, {"type": "text", "label": "npm package version", "description": "The version of the package (e.g. 0.1.0, 1.2.5).", "isIdentifier": false}, {"type": "link", "label": "Snap audit report", "description": "If the Snap uses one or more of the key management API methods, a PDF or URL of the audit report is required. If the Snap doesn't require an audit, this field may be left blank."}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "snap", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "A list of Metamask Snaps that have passed the basic security and/or audit requirements set out by Metamask", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to add a snap to Metamask Snaps - \\"Seems Secure\\" list", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the snap complies with the required criteria and should be added.", "Select this if you think the snap does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmNine73YyPPowbW4xcXK9c4vkMpuiY9dr9jePPRv2iZDZ"}	{"title": "Remove a module from Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmPj9TspjDKGNF8K871yFLZNXJgp3Nj4zo99fqbBmsJx37", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmNU5GbDgTUfiTqxCZU2RZzECA3ndF7tQHc9oQD375dE2b"}	{"title": "Add a module to Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmPj9TspjDKGNF8K871yFLZNXJgp3Nj4zo99fqbBmsJx37", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXns4U3asxRJu96FoytQW7LArPNsDFMrXoSTQ8XiAGjQm"}	{"title": "Remove a snap from Metamask Snaps - \\"Seems Secure\\" list", "fileURI": "/ipfs/QmQekgkYL3pVmc5QqJUKDBPnLkEuWT1Q7XQnmVS52ipb6i", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap name ", "description": "The name of the Snap as displayed in the MetaMask Snaps permissionless directory.", "isIdentifier": true}, {"type": "link", "label": "MetaMask Directory Link", "description": "The link to the Snap in the MetaMask permissionless directory", "isIdentifier": true}, {"type": "link", "label": "Repository URL", "description": "The public repository that hosts the Snap’s source code, which must not contain MORE THAN 500 LINES OF CODE IN INDEX.TS IF NO EXTERNAL AUDIT HAS BEEN DONE (EXCLUDING COMMENTS).", "isIdentifier": true}, {"type": "text", "label": "Git commit hash", "description": "The hash of the specific commit to be referenced in this repository."}, {"type": "text", "label": "npm package name", "description": "The name of the npm package of the published Snap. ", "isIdentifier": true}, {"type": "text", "label": "npm package version", "description": "The version of the package (e.g. 0.1.0, 1.2.5).", "isIdentifier": false}, {"type": "link", "label": "Snap audit report", "description": "If the Snap uses one or more of the key management API methods, a PDF or URL of the audit report is required. If the Snap doesn't require an audit, this field may be left blank."}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "snap", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "A list of Metamask Snaps that have passed the basic security and/or audit requirements set out by Metamask", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to remove a snap from Metamask Snaps - \\"Seems Secure\\" list", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the snap does not comply with the required criteria and should be removed.", "Select this if you think the snap complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXGh4UBWW5uN4C2tVe6dbk3HTAj931hULsLjNZEfHJYvc"}	{"title": "Add a snap to Metamask Snaps - \\"Seems Secure\\" list", "fileURI": "/ipfs/QmQekgkYL3pVmc5QqJUKDBPnLkEuWT1Q7XQnmVS52ipb6i", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap name ", "description": "The name of the Snap as displayed in the MetaMask Snaps permissionless directory.", "isIdentifier": true}, {"type": "link", "label": "MetaMask Directory Link", "description": "The link to the Snap in the MetaMask permissionless directory", "isIdentifier": true}, {"type": "link", "label": "Repository URL", "description": "The public repository that hosts the Snap’s source code, which must not contain MORE THAN 500 LINES OF CODE IN INDEX.TS IF NO EXTERNAL AUDIT HAS BEEN DONE (EXCLUDING COMMENTS).", "isIdentifier": true}, {"type": "text", "label": "Git commit hash", "description": "The hash of the specific commit to be referenced in this repository."}, {"type": "text", "label": "npm package name", "description": "The name of the npm package of the published Snap. ", "isIdentifier": true}, {"type": "text", "label": "npm package version", "description": "The version of the package (e.g. 0.1.0, 1.2.5).", "isIdentifier": false}, {"type": "link", "label": "Snap audit report", "description": "If the Snap uses one or more of the key management API methods, a PDF or URL of the audit report is required. If the Snap doesn't require an audit, this field may be left blank."}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "snap", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "A list of Metamask Snaps that have passed the basic security and/or audit requirements set out by Metamask", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to add a snap to Metamask Snaps - \\"Seems Secure\\" list", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the snap complies with the required criteria and should be added.", "Select this if you think the snap does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmcs3Y9BpTaW68vkhL5LWUACA1hQYUNc7NEn6MxyeJjr5j/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from LayerZero Sybil Bounty Program enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "LayerZero Sybil Bounty Program enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to LayerZero Sybil Bounty Program", "parentTCRAddress": "0x06a17e1891c6E7903e0850E7dbaEfA4ECF9CA40E", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from LayerZero Sybil Bounty Program enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmc98q9rvMTa4dC7jqKLmiorvocNRW1CFHbeh3TY72PQow/clr-meta-evidence.json"}	{"title": "Remove an item from LayerZero Sybil Bounty Program", "fileURI": "/ipfs/QmeGW7yxB9xnm9QWQqh6qydCS8q4MAHrCF5fKZjnfYFc2q/policy-draft.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "long text", "label": "Sybil Address/es", "description": "A single Sybil address or a list of comma separated Sybil addresses. The format for a list is: 'address', 'comma', 'whitespace', 'next address'. No comma after the last address", "isIdentifier": false}, {"type": "text", "label": "Description", "description": "A short description of your challenge submission", "isIdentifier": true}], "logoURI": "/ipfs/QmZn7HGKkkMJnSRWPgL2T2u4FCv2ucKULjFmQUo8G7BqAQ/layerzero-emblem.png", "itemName": "item", "tcrTitle": "LayerZero Sybil Bounty Program", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of verified Sybil addresses of the LayerZero bountry program", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from LayerZero Sybil Bounty Program", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmeEVJjKLGaPfSniqj5qBCpmbKFNq4VSWk13quwRXQB1qt/reg-meta-evidence.json"}	{"title": "Add an item to LayerZero Sybil Bounty Program", "fileURI": "/ipfs/QmeGW7yxB9xnm9QWQqh6qydCS8q4MAHrCF5fKZjnfYFc2q/policy-draft.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "long text", "label": "Sybil Address/es", "description": "A single Sybil address or a list of comma separated Sybil addresses. The format for a list is: 'address', 'comma', 'whitespace', 'next address'. No comma after the last address", "isIdentifier": false}, {"type": "text", "label": "Description", "description": "A short description of your challenge submission", "isIdentifier": true}], "logoURI": "/ipfs/QmZn7HGKkkMJnSRWPgL2T2u4FCv2ucKULjFmQUo8G7BqAQ/layerzero-emblem.png", "itemName": "item", "tcrTitle": "LayerZero Sybil Bounty Program", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of verified Sybil addresses of the LayerZero bountry program", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to LayerZero Sybil Bounty Program", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPsB7qwv3U1JoHGhbnG3G5Bgg9GWGJTH9HEMmhcw1RqzF/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to LayerZero Sybil Bounty Program enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "LayerZero Sybil Bounty Program enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to LayerZero Sybil Bounty Program", "parentTCRAddress": "0x06a17e1891c6E7903e0850E7dbaEfA4ECF9CA40E", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to LayerZero Sybil Bounty Program enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXMW2gBMxHbPpJ1eNr8p4exvJyR4NJYR6KBahKA8dkz6L/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to LayerZero Sybil Bounty Program enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "LayerZero Sybil Bounty Program enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to LayerZero Sybil Bounty Program", "parentTCRAddress": "0x44fe242bDF29ceBdF520B88c83fA78C0c046E312", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to LayerZero Sybil Bounty Program enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmNiPspiKDzGYWYQDHDVAQtJS4cs88JbQFbNLi33iecsn1/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from LayerZero Sybil Bounty Program enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "LayerZero Sybil Bounty Program enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to LayerZero Sybil Bounty Program", "parentTCRAddress": "0x44fe242bDF29ceBdF520B88c83fA78C0c046E312", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from LayerZero Sybil Bounty Program enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmRpAUW9VGkmZLH97HBYYJvyBo7midpqeJM3AP9rM1Kyms/clr-meta-evidence.json"}	{"title": "Remove an item from LayerZero Sybil Bounty Program", "fileURI": "/ipfs/QmVURirtLa6gLZQDKWcFQonTdtVdMk6gGj4rxaJxtRRDaT/lz-policyv2.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "long text", "label": "Sybil Address/es", "description": "A single Sybil address or a list of comma separated Sybil addresses. The format for a list is: 'address', 'comma', 'whitespace', 'next address'. No comma after the last address.", "isIdentifier": false}, {"type": "text", "label": "Description", "description": "A short description of your Sybil submission.", "isIdentifier": true}], "logoURI": "/ipfs/QmZn7HGKkkMJnSRWPgL2T2u4FCv2ucKULjFmQUo8G7BqAQ/layerzero-emblem.png", "itemName": "item", "tcrTitle": "LayerZero Sybil Bounty Program", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of verified Sybil addresses of the LayerZero bountry program.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from LayerZero Sybil Bounty Program", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbTG5K3i3NJydQ31poCtFojaju49SNQP4VFgdTvuZNEhS/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from LayerZero Sybil Address List enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "LayerZero Sybil Address List enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to LayerZero Sybil Address List", "parentTCRAddress": "0xd72d0D88447DAC3AccFE9c29E888d144A745E6B1", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from LayerZero Sybil Address List enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmYVcnhRw9fM2dVuZR7G7yfxmquHG71F2KQfmJXB3r9Yho/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to LayerZero Sybil Address List enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "LayerZero Sybil Address List enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to LayerZero Sybil Address List", "parentTCRAddress": "0xd72d0D88447DAC3AccFE9c29E888d144A745E6B1", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to LayerZero Sybil Address List enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmf6nVPNUVxLi8ZWvPoAfPa2xjqKMPbqVYC2wEPZERKjZo/reg-meta-evidence.json"}	{"title": "Add an item to LayerZero Sybil Bounty Program", "fileURI": "/ipfs/QmVURirtLa6gLZQDKWcFQonTdtVdMk6gGj4rxaJxtRRDaT/lz-policyv2.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "long text", "label": "Sybil Address/es", "description": "A single Sybil address or a list of comma separated Sybil addresses. The format for a list is: 'address', 'comma', 'whitespace', 'next address'. No comma after the last address.", "isIdentifier": false}, {"type": "text", "label": "Description", "description": "A short description of your Sybil submission.", "isIdentifier": true}], "logoURI": "/ipfs/QmZn7HGKkkMJnSRWPgL2T2u4FCv2ucKULjFmQUo8G7BqAQ/layerzero-emblem.png", "itemName": "item", "tcrTitle": "LayerZero Sybil Bounty Program", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of verified Sybil addresses of the LayerZero bountry program.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to LayerZero Sybil Bounty Program", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmT9A2yvGUFPegqhSqQQZk3YrreRSqGfze5xkFi68fRvK5/reg-meta-evidence.json"}	{"title": "Add an item to LayerZero Sybil Address List", "fileURI": "/ipfs/QmTgaXhnBo4ZGCFEan41bpEjrmx7YL3hNMjZcqTCa2e1Gg/lz-policy-v3.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "long text", "label": "Sybil Address/es", "description": "A single Sybil address or a list of comma separated Sybil addresses. The format for a list is: 'address', 'comma', 'whitespace', 'next address'. No comma is allowed after the last address.", "isIdentifier": false}, {"type": "text", "label": "Description", "description": "Each submission must include a description that concisely describes the item. The description must be less than 50 characters. This parameter is only used to identify the submission and will not affect the acceptance of the submission.", "isIdentifier": true}, {"type": "file", "label": "Evidence", "description": "Clear evidence supporting the claim that the address is a Sybil (e.g., transaction patterns, linked addresses). Evidence must be submitted in PDF format. Each file must not exceed 5 MB in size. Submissions that do not adhere to this format or size limit will be considered invalid. This policy ensures that evidence is comprehensive yet manageable for reviewers.", "allowedFileTypes": "pdf"}], "logoURI": "/ipfs/QmZn7HGKkkMJnSRWPgL2T2u4FCv2ucKULjFmQUo8G7BqAQ/layerzero-emblem.png", "itemName": "item", "tcrTitle": "LayerZero Sybil Address List", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of Sybil addresses for LayerZero’s airdrop Sybil bounty program", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to LayerZero Sybil Address List", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmX5doP8YASc5GC6Cqe1zwbe3cm1XkTn6EiaWjCh46gFJo/clr-meta-evidence.json"}	{"title": "Remove an item from LayerZero Sybil Address List", "fileURI": "/ipfs/QmTgaXhnBo4ZGCFEan41bpEjrmx7YL3hNMjZcqTCa2e1Gg/lz-policy-v3.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "long text", "label": "Sybil Address/es", "description": "A single Sybil address or a list of comma separated Sybil addresses. The format for a list is: 'address', 'comma', 'whitespace', 'next address'. No comma is allowed after the last address.", "isIdentifier": false}, {"type": "text", "label": "Description", "description": "Each submission must include a description that concisely describes the item. The description must be less than 50 characters. This parameter is only used to identify the submission and will not affect the acceptance of the submission.", "isIdentifier": true}, {"type": "file", "label": "Evidence", "description": "Clear evidence supporting the claim that the address is a Sybil (e.g., transaction patterns, linked addresses). Evidence must be submitted in PDF format. Each file must not exceed 5 MB in size. Submissions that do not adhere to this format or size limit will be considered invalid. This policy ensures that evidence is comprehensive yet manageable for reviewers.", "allowedFileTypes": "pdf"}], "logoURI": "/ipfs/QmZn7HGKkkMJnSRWPgL2T2u4FCv2ucKULjFmQUo8G7BqAQ/layerzero-emblem.png", "itemName": "item", "tcrTitle": "LayerZero Sybil Address List", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of Sybil addresses for LayerZero’s airdrop Sybil bounty program", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from LayerZero Sybil Address List", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZhBSiNw6uUjHkEF6JPuGbg72AD9Z9V2T21xHnLspRXgN/reg-meta-evidence.json"}	{"title": "Add an address to Addresses of real people/entities", "fileURI": "/ipfs/QmcJd2NBp78k2mG5esyPZFMonVsvUd2S4MKF6g94B7HCzh/kleros-acceptance-criteria.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Name", "description": "The name of the person/entity the said blockchain address is controlled by", "isIdentifier": true}, {"type": "address", "label": "Address", "description": "The blockchain address controlled by the person/entity"}, {"type": "text", "label": "Blockchain", "description": "The blockchain/layer2 the address is present on"}, {"type": "boolean", "label": "Person", "description": "Is the address controlled by a person?"}, {"type": "boolean", "label": "Entity", "description": "Is the address controlled by an entity?"}, {"type": "link", "label": "Attribution", "description": "A link to the evidence that links the address to the person/entity"}, {"type": "long text", "label": "Notes", "description": "Any further information about the registry entry", "isIdentifier": false}], "logoURI": "/ipfs/QmUesSZVcYsCisDhEbFzmbxXnsi2C8PsquhePUkcx3jaQR/dall-e-2024-06-10-14.45.09-a-logo-featuring-elements-of-cryptocurrency-and-a-human-figure-that-exudes-wealth.-the-human-figure-should-be-more-life-like-representing-prosperity-.webp", "itemName": "address", "tcrTitle": "Addresses of real people/entities", "isTCRofTCRs": false, "itemNamePlural": "addresses", "relTcrDisabled": true, "tcrDescription": "A list of blockchain addresses and the real-life people/organizations that each address is controlled by. ", "requireRemovalEvidence": true}, "question": "Does the address comply with the required criteria?", "description": "Someone requested to add an address to Addresses of real people/entities", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the address complies with the required criteria and should be added.", "Select this if you think the address does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXceMqihAAxaGM6Z5fAxNM8us3d8YNkq45qbFwvWMtHn7/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to zkSync Sybil Address List enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "zkSync Sybil Address List enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to zkSync Sybil Address List", "parentTCRAddress": "0xBc77362be3c18E484c88c6c42ffFEbA700223130", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to zkSync Sybil Address List enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZrwrCZt7UBbVsY7CTuXgnGNiiygbrRXKVmhSseWojEQF/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from zkSync Sybil Address List enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "zkSync Sybil Address List enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to zkSync Sybil Address List", "parentTCRAddress": "0x2ECBF715446CC626e6Bbc8F8270cdf5795ADC54d", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from zkSync Sybil Address List enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmewBVTnyq3eHu1WSADcRmzeEjNabCwHAFsvy9Tzb1oxNR/reg-meta-evidence.json"}	{"title": "Add an item to zkSync Sybil Address List", "fileURI": "/ipfs/QmeECeTM1pNwmGx7Fr137XEQ3PhVe71YvXiYRn9Sotam8S/policyzk.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Description", "description": "Each submission must include a description that concisely describes the item. The description must be less than 50 characters. This parameter is only used to identify the submission and will not affect the acceptance of the submission.", "isIdentifier": true}, {"type": "file", "label": "Sybil Address/es", "description": "- Submissions must include the addresses in a CSV file. - The CSV file must contain one address per line. - No other characters are allowed in the CSV file except for the addresses. - Submissions that do not adhere to this format will be considered invalid.", "allowedFileTypes": "CSV"}, {"type": "file", "label": "Evidence", "description": "Submissions must include clear evidence supporting the claim that the address is a Sybil (e.g., transaction patterns, linked addresses). Evidence must be submitted in PDF format. Each file must not exceed 5 MB in size and 10 pages in length. Submissions that do not adhere to this format, size limit, or page limit will be considered invalid. This policy ensures that evidence is comprehensive yet manageable for reviewers.", "allowedFileTypes": "PDF"}], "logoURI": "/ipfs/QmNyoonLfmXow9FM1FqqNsksHf5zmEp7jwyvfSszKKWwoo/full-logo-zksync-black.png", "itemName": "item", "tcrTitle": "zkSync Sybil Address List", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of sybil address for the zkSync Airdrop", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to zkSync Sybil Address List", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXM94EQqXdeCcbJQkLoVaUrLEjWjuMHpC7xM1rCVH2753/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from zkSync Sybil Address List enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "zkSync Sybil Address List enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to zkSync Sybil Address List", "parentTCRAddress": "0xBc77362be3c18E484c88c6c42ffFEbA700223130", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from zkSync Sybil Address List enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmbXpUHJdtQ2vEaFdZmgJehGtJUTYzAkpASiA91XyHvcit/clr-metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmarLK8MmtshY7tRPqh7TXFLLqFprAhE4KqDXHkP1ppydN/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQqhozqoDAzz13bCAHQb6r92srehNGEf6JkonSMCJCE3T/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to zkSync Sybil Address List enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "zkSync Sybil Address List enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to zkSync Sybil Address List", "parentTCRAddress": "0x2ECBF715446CC626e6Bbc8F8270cdf5795ADC54d", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to zkSync Sybil Address List enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVAtfoGpbq5QfuTPv7C6GP8iVCmRBPNUXCQ2MPqkLxvkH/reg-meta-evidence.json"}	{"title": "Add an item to zkSync Sybil Address List", "fileURI": "/ipfs/QmeECeTM1pNwmGx7Fr137XEQ3PhVe71YvXiYRn9Sotam8S/policyzk.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Description", "description": "Each submission must include a description that concisely describes the item. The description must be less than 50 characters. This parameter is only used to identify the submission and will not affect the acceptance of the submission.", "isIdentifier": true}, {"type": "file", "label": "Sybil Address/es", "description": "- Submissions must include the addresses in a CSV file. - The CSV file must contain one address per line. - No other characters are allowed in the CSV file except for the addresses. - Submissions that do not adhere to this format will be considered invalid.", "allowedFileTypes": "csv"}, {"type": "file", "label": "Evidence", "description": "Submissions must include clear evidence supporting the claim that the address is a Sybil (e.g., transaction patterns, linked addresses). Evidence must be submitted in PDF format. Each file must not exceed 5 MB in size and 10 pages in length. Submissions that do not adhere to this format, size limit, or page limit will be considered invalid. This policy ensures that evidence is comprehensive yet manageable for reviewers.", "allowedFileTypes": "pdf"}], "logoURI": "/ipfs/QmNyoonLfmXow9FM1FqqNsksHf5zmEp7jwyvfSszKKWwoo/full-logo-zksync-black.png", "itemName": "item", "tcrTitle": "zkSync Sybil Address List", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of sybil address for the zkSync Airdrop.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to zkSync Sybil Address List", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmYZxfubEeaN8TA2KvC2quYWE5oTu3LAgqSzRbXDEeXruJ/clr-meta-evidence.json"}	{"title": "Remove an item from zkSync Sybil Address List", "fileURI": "/ipfs/QmeECeTM1pNwmGx7Fr137XEQ3PhVe71YvXiYRn9Sotam8S/policyzk.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Description", "description": "Each submission must include a description that concisely describes the item. The description must be less than 50 characters. This parameter is only used to identify the submission and will not affect the acceptance of the submission.", "isIdentifier": true}, {"type": "file", "label": "Sybil Address/es", "description": "- Submissions must include the addresses in a CSV file. - The CSV file must contain one address per line. - No other characters are allowed in the CSV file except for the addresses. - Submissions that do not adhere to this format will be considered invalid.", "allowedFileTypes": "csv"}, {"type": "file", "label": "Evidence", "description": "Submissions must include clear evidence supporting the claim that the address is a Sybil (e.g., transaction patterns, linked addresses). Evidence must be submitted in PDF format. Each file must not exceed 5 MB in size and 10 pages in length. Submissions that do not adhere to this format, size limit, or page limit will be considered invalid. This policy ensures that evidence is comprehensive yet manageable for reviewers.", "allowedFileTypes": "pdf"}], "logoURI": "/ipfs/QmNyoonLfmXow9FM1FqqNsksHf5zmEp7jwyvfSszKKWwoo/full-logo-zksync-black.png", "itemName": "item", "tcrTitle": "zkSync Sybil Address List", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of sybil address for the zkSync Airdrop.", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from zkSync Sybil Address List", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmemJXgGN8cymXEYhuU8DLPUDJs7PCrMU5bQYvPGSioGMT/clr-meta-evidence.json"}	{"title": "Remove an item from zkSync Sybil Address List", "fileURI": "/ipfs/QmeECeTM1pNwmGx7Fr137XEQ3PhVe71YvXiYRn9Sotam8S/policyzk.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Description", "description": "Each submission must include a description that concisely describes the item. The description must be less than 50 characters. This parameter is only used to identify the submission and will not affect the acceptance of the submission.", "isIdentifier": true}, {"type": "file", "label": "Sybil Address/es", "description": "- Submissions must include the addresses in a CSV file. - The CSV file must contain one address per line. - No other characters are allowed in the CSV file except for the addresses. - Submissions that do not adhere to this format will be considered invalid.", "allowedFileTypes": "CSV"}, {"type": "file", "label": "Evidence", "description": "Submissions must include clear evidence supporting the claim that the address is a Sybil (e.g., transaction patterns, linked addresses). Evidence must be submitted in PDF format. Each file must not exceed 5 MB in size and 10 pages in length. Submissions that do not adhere to this format, size limit, or page limit will be considered invalid. This policy ensures that evidence is comprehensive yet manageable for reviewers.", "allowedFileTypes": "PDF"}], "logoURI": "/ipfs/QmNyoonLfmXow9FM1FqqNsksHf5zmEp7jwyvfSszKKWwoo/full-logo-zksync-black.png", "itemName": "item", "tcrTitle": "zkSync Sybil Address List", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of sybil address for the zkSync Airdrop", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from zkSync Sybil Address List", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaCUjT89kM7Mb71FUnazHGMGekDrbpyjQ5qeJ5KmCaFxt/clr-meta-evidence.json"}	{"title": "Remove an address from Addresses of real people/entities", "fileURI": "/ipfs/QmcJd2NBp78k2mG5esyPZFMonVsvUd2S4MKF6g94B7HCzh/kleros-acceptance-criteria.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Name", "description": "The name of the person/entity the said blockchain address is controlled by", "isIdentifier": true}, {"type": "address", "label": "Address", "description": "The blockchain address controlled by the person/entity"}, {"type": "text", "label": "Blockchain", "description": "The blockchain/layer2 the address is present on"}, {"type": "boolean", "label": "Person", "description": "Is the address controlled by a person?"}, {"type": "boolean", "label": "Entity", "description": "Is the address controlled by an entity?"}, {"type": "link", "label": "Attribution", "description": "A link to the evidence that links the address to the person/entity"}, {"type": "long text", "label": "Notes", "description": "Any further information about the registry entry", "isIdentifier": false}], "logoURI": "/ipfs/QmUesSZVcYsCisDhEbFzmbxXnsi2C8PsquhePUkcx3jaQR/dall-e-2024-06-10-14.45.09-a-logo-featuring-elements-of-cryptocurrency-and-a-human-figure-that-exudes-wealth.-the-human-figure-should-be-more-life-like-representing-prosperity-.webp", "itemName": "address", "tcrTitle": "Addresses of real people/entities", "isTCRofTCRs": false, "itemNamePlural": "addresses", "relTcrDisabled": true, "tcrDescription": "A list of blockchain addresses and the real-life people/organizations that each address is controlled by. ", "requireRemovalEvidence": true}, "question": "Does the address comply with the required criteria?", "description": "Someone requested to remove an address from Addresses of real people/entities", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the address does not comply with the required criteria and should be removed.", "Select this if you think the address complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmTPcMXKKHYRpYwHoJVTTgeYPWM7EtjcmUkbNwSR5dcGno/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Addresses of real people/entities enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Addresses of real people/entities enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Addresses of real people/entities", "parentTCRAddress": "0x10749DB57d5eA969CCfe16C9CB0E44F3400F6B87", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Addresses of real people/entities enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVW1FfaxMrPTGB4CsyTBA6U8H7EmXd5fHckq6ju4aKsmL"}	{"title": "Remove a snap from Metamask Snaps - \\"Seems Secure\\" list", "fileURI": "/ipfs/QmRtJANonKQFHDGcgJiBFiiCjeB8wqaSHNHmdXt4w16tHE", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap name ", "description": "The name of the Snap as displayed in the MetaMask Snaps permissionless directory.", "isIdentifier": true}, {"type": "link", "label": "MetaMask Directory Link", "description": "The link to the Snap in the MetaMask permissionless directory", "isIdentifier": true}, {"type": "link", "label": "Repository URL", "description": "The public repository that hosts the Snap’s source code, which must not contain MORE THAN 500 LINES OF CODE IN INDEX.TS IF NO EXTERNAL AUDIT HAS BEEN DONE (EXCLUDING COMMENTS).", "isIdentifier": true}, {"type": "text", "label": "Git commit hash", "description": "The hash of the specific commit to be referenced in this repository."}, {"type": "text", "label": "npm package name", "description": "The name of the npm package of the published Snap. ", "isIdentifier": true}, {"type": "text", "label": "npm package version", "description": "The version of the package (e.g. 0.1.0, 1.2.5).", "isIdentifier": false}, {"type": "link", "label": "Snap audit report", "description": "If the Snap uses one or more of the key management API methods, a PDF or URL of the audit report is required. If the Snap doesn't require an audit, this field may be left blank."}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "snap", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "A list of Metamask Snaps that have passed the basic security and/or audit requirements set out by Metamask", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to remove a snap from Metamask Snaps - \\"Seems Secure\\" list", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the snap does not comply with the required criteria and should be removed.", "Select this if you think the snap complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPL1Wr89wnuBg9xgRsxRC2oeTkAEGr8jSDvdqoZfR7dYo"}	{"title": "Add a snap to Metamask Snaps - \\"Seems Secure\\" list", "fileURI": "/ipfs/QmRtJANonKQFHDGcgJiBFiiCjeB8wqaSHNHmdXt4w16tHE", "category": "Curated Lists", "metadata": {"columns": [{"type": "text", "label": "Snap name ", "description": "The name of the Snap as displayed in the MetaMask Snaps permissionless directory.", "isIdentifier": true}, {"type": "link", "label": "MetaMask Directory Link", "description": "The link to the Snap in the MetaMask permissionless directory", "isIdentifier": true}, {"type": "link", "label": "Repository URL", "description": "The public repository that hosts the Snap’s source code, which must not contain MORE THAN 500 LINES OF CODE IN INDEX.TS IF NO EXTERNAL AUDIT HAS BEEN DONE (EXCLUDING COMMENTS).", "isIdentifier": true}, {"type": "text", "label": "Git commit hash", "description": "The hash of the specific commit to be referenced in this repository."}, {"type": "text", "label": "npm package name", "description": "The name of the npm package of the published Snap. ", "isIdentifier": true}, {"type": "text", "label": "npm package version", "description": "The version of the package (e.g. 0.1.0, 1.2.5).", "isIdentifier": false}, {"type": "link", "label": "Snap audit report", "description": "If the Snap uses one or more of the key management API methods, a PDF or URL of the audit report is required. If the Snap doesn't require an audit, this field may be left blank."}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "snap", "tcrTitle": "Metamask Snaps - \\"Seems Secure\\" list", "isTCRofTCRs": false, "itemNamePlural": "snaps", "relTcrDisabled": true, "tcrDescription": "A list of Metamask Snaps that have passed the basic security and/or audit requirements set out by Metamask", "requireRemovalEvidence": true}, "question": "Does the snap comply with the required criteria?", "description": "Someone requested to add a snap to Metamask Snaps - \\"Seems Secure\\" list", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the snap complies with the required criteria and should be added.", "Select this if you think the snap does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmR3fH3UPETcMMYWAinXmVpgdeUPqnG7AaJpUfTVtRbMtT/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Addresses of real people/entities enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Addresses of real people/entities enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Addresses of real people/entities", "parentTCRAddress": "0x10749DB57d5eA969CCfe16C9CB0E44F3400F6B87", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Addresses of real people/entities enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qma9zDet3KnqNZeSqnnnb62RqhR4LqmgpSmKbXDiyCuvm6"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmZetBgPEXv1YUk2qfCBWr1nSjPKePaAaWMuU74uW395Zj", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmeksBqpNymmv5Nmrepig9p1JFHZ11nFWJa5Y2TJXukAJS"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmZetBgPEXv1YUk2qfCBWr1nSjPKePaAaWMuU74uW395Zj", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmSgb1FXCJbqMsheVsWrsqvzniUyTDyYXdNyEzd5F4yoaZ"}	{"title": "Add a module to Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmfXru4pbcpMLFaiNDGNontRHuLD3va7m95tUGYGZuMtqm", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmecEMUJMMnhN9idRK45DH9e97V5s2Eifuhsp5cRd7ZUWL"}	{"title": "Remove a module from Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmfXru4pbcpMLFaiNDGNontRHuLD3va7m95tUGYGZuMtqm", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUHJ41LRFqfVaZ7hwCfpKUtAywF3KAn98hGu7k3UYYezt/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Seer Markets enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Seer Markets enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Seer Markets", "parentTCRAddress": "0x5aAF9E23A11440F8C1Ad6D2E2e5109C7e52CC672", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Seer Markets enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmVgAQdy74eEGuhTKgtEZQ5Bg3JPbudBwrXEK73xxD4Lbz/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Seer Markets enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Seer Markets enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Seer Markets", "parentTCRAddress": "0x5aAF9E23A11440F8C1Ad6D2E2e5109C7e52CC672", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Seer Markets enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmeA3G1j7bi72n4SNXeaoQmdpfZkYr6mq98Fi7AFh74qtr/reg-meta-evidence.json"}	{"title": "Add a market to Seer Markets", "fileURI": "/ipfs/QmP1JMDd1EP1uR4ski5PQTJWyYsaafnsLyzYscD8fdpd8v/seer-verified-markets-on-gnosis-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market.", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images.", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmckmpMuWGiGHCzbYgPqLPcCvLDj4YDPRZB63p7VaAjrbB/seer-logo-2-.png", "itemName": "market", "tcrTitle": "Seer Markets", "isTCRofTCRs": false, "itemNamePlural": "markets", "relTcrDisabled": true, "tcrDescription": "Registry of verified Seer markets", "requireRemovalEvidence": true}, "question": "Does the market comply with the required criteria?", "description": "Someone requested to add a market to Seer Markets", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the market complies with the required criteria and should be added.", "Select this if you think the market does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmV8jzYu5EnoRkSNECqiecRDPiemj7HZMFh2QyQxfgTNeX/clr-meta-evidence.json"}	{"title": "Remove a market from Seer Markets", "fileURI": "/ipfs/QmP1JMDd1EP1uR4ski5PQTJWyYsaafnsLyzYscD8fdpd8v/seer-verified-markets-on-gnosis-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market.", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images.", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmckmpMuWGiGHCzbYgPqLPcCvLDj4YDPRZB63p7VaAjrbB/seer-logo-2-.png", "itemName": "market", "tcrTitle": "Seer Markets", "isTCRofTCRs": false, "itemNamePlural": "markets", "relTcrDisabled": true, "tcrDescription": "Registry of verified Seer markets", "requireRemovalEvidence": true}, "question": "Does the market comply with the required criteria?", "description": "Someone requested to remove a market from Seer Markets", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the market does not comply with the required criteria and should be removed.", "Select this if you think the market complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWgpEwCwPqjqZttLueXxMP4SbCMUEEYQauu24jRVRhqek/reg-meta-evidence.json"}	{"title": "Add a market to Seer Markets", "fileURI": "/ipfs/QmWw7bJiCEQBcN7ufZZwxSR7wzKvVC3oyPWoE5nj4BfD4W/seer-verified-markets-on-gnosis-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Market", "description": "Address of the market.", "isIdentifier": true}, {"type": "file", "label": "Images", "description": "JSON file with the URLs of the images.", "allowedFileTypes": "json"}], "logoURI": "/ipfs/QmckmpMuWGiGHCzbYgPqLPcCvLDj4YDPRZB63p7VaAjrbB/seer-logo-2-.png", "itemName": "market", "tcrTitle": "Seer Markets", "isTCRofTCRs": false, "itemNamePlural": "markets", "relTcrDisabled": true, "tcrDescription": "Registry of verified Seer markets", "requireRemovalEvidence": true}, "question": "Does the market comply with the required criteria?", "description": "Someone requested to add a market to Seer Markets", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the market complies with the required criteria and should be added.", "Select this if you think the market does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXZ2fQf9W1Tf4VhjQGRErU23icpEAsRB6ZT75nnwQR3Jm/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Contract-Domain Name Query Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Contract-Domain Name Query Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Contract-Domain Name Query Registry", "parentTCRAddress": "0x88b507B7E36F8d19e11Dfa4f958Dba8d6CebdC17", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Contract-Domain Name Query Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmRtr64Vw1T1TtUkLDdmFb7bua6R6TmKMRL8g9wJ46SCqo/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Contract-Domain Name Query Registry enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Contract-Domain Name Query Registry enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Contract-Domain Name Query Registry", "parentTCRAddress": "0x88b507B7E36F8d19e11Dfa4f958Dba8d6CebdC17", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Contract-Domain Name Query Registry enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"Qmeh7FHCCNo1u7YTBKZpEdtXsDhSpxsvXqsT8KRSeS2Quh/reg-meta-evidence.json"}	{"title": "Add a module to Contract-Domain Name Query Registry", "fileURI": "/ipfs/QmR4GSw1V7ZX3i21nNLwR3D1nhvrP9ma3XCGJSYxopwuxv/cdn-query-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the CDN entries.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "text", "label": "Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to concisely describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}, {"type": "image", "label": "Visual Proof", "description": "A PDF, image or video file that shows the ability for users to use this page to access the different contracts covered by this CDN entry.", "isIdentifier": false}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "module", "tcrTitle": "Contract-Domain Name Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve CDN tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Contract-Domain Name Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbzT51ikzmhE5kpWY2TWiidwGWMZX1VFfNWQJNpbizQfZ/clr-meta-evidence.json"}	{"title": "Remove a module from Contract-Domain Name Query Registry", "fileURI": "/ipfs/QmR4GSw1V7ZX3i21nNLwR3D1nhvrP9ma3XCGJSYxopwuxv/cdn-query-list-guidelines.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the CDN entries.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "text", "label": "Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to concisely describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}, {"type": "image", "label": "Visual Proof", "description": "A PDF, image or video file that shows the ability for users to use this page to access the different contracts covered by this CDN entry.", "isIdentifier": false}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "module", "tcrTitle": "Contract-Domain Name Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve CDN tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Contract-Domain Name Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmdLFrD1eyVB8CyG9tN3LLEjbLXMb8ZeHsWdWhCBMJTNGo/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Cerberus Audit enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Cerberus Audit enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Cerberus Audit", "parentTCRAddress": "0x502E114f36dCA869Deacfc856cE2519Bd3019932", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Cerberus Audit enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXC5dRVrBJHkFazHVpXrasMGyYKa2dQWd369yC61fSKy9/metaevidence.json"}	{"title": "Add a module to Contract-Domain Name Query Registry", "fileURI": "/ipfs/QmPfzkG4FGqx52tcpXn4tYnpVT81V1bdj3Rr1y2ZuKUDEL/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the CDN entries.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "text", "label": "Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to concisely describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}, {"type": "image", "label": "Visual Proof", "description": "A PDF, image or video file that shows the ability for users to use this page to access the different contracts covered by this CDN entry.", "isIdentifier": false}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "module", "tcrTitle": "Contract-Domain Name Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve CDN tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Contract-Domain Name Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmc2kLw9MRLJpoFyxbBW8UGjRnLbWBvbJ5WHtuQ2WB8w4Y/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Cerberus Audit enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Cerberus Audit enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Cerberus Audit", "parentTCRAddress": "0x502E114f36dCA869Deacfc856cE2519Bd3019932", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Cerberus Audit enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXp3E39KQ5yAk75GaT92DARPdWmi7QNxnwB3yWNAmMvbb/reg-meta-evidence.json"}	{"title": "Add a scammer to Cerberus Audit", "fileURI": "/ipfs/QmNaiJk8ojoMpyyXEEdwzSgxTjH3SgeZbd1zg5XMKSN4pc/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "X handle", "description": "Link to X username", "isIdentifier": true}], "logoURI": "/ipfs/QmWj2tVor8jJut6NFr6VEE1yCQfC6koWu2Bysk1hzq8CHk/logo-removebg-preview.png", "itemName": "scammer", "tcrTitle": "Cerberus Audit", "isTCRofTCRs": false, "itemNamePlural": "scammers", "relTcrDisabled": true, "tcrDescription": "A list of X.com Crypto Scammers", "requireRemovalEvidence": true}, "question": "Does the scammer comply with the required criteria?", "description": "Someone requested to add a scammer to Cerberus Audit", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the scammer complies with the required criteria and should be added.", "Select this if you think the scammer does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQuacEJwbGTnkb8GAD7PbZxSyArUGg3gfdsC5cKS2fjMA/clr-meta-evidence.json"}	{"title": "Remove a scammer from Cerberus Audit", "fileURI": "/ipfs/QmNaiJk8ojoMpyyXEEdwzSgxTjH3SgeZbd1zg5XMKSN4pc/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "X handle", "description": "Link to X username", "isIdentifier": true}], "logoURI": "/ipfs/QmWj2tVor8jJut6NFr6VEE1yCQfC6koWu2Bysk1hzq8CHk/logo-removebg-preview.png", "itemName": "scammer", "tcrTitle": "Cerberus Audit", "isTCRofTCRs": false, "itemNamePlural": "scammers", "relTcrDisabled": true, "tcrDescription": "A list of X.com Crypto Scammers", "requireRemovalEvidence": true}, "question": "Does the scammer comply with the required criteria?", "description": "Someone requested to remove a scammer from Cerberus Audit", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the scammer does not comply with the required criteria and should be removed.", "Select this if you think the scammer complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmb4ueWJQWh6sf5enXVo3ieafuTBoXu5RrtTNMs213rUx5/metaevidence.json"}	{"title": "Add a module to Contract-Domain Name Query Registry", "fileURI": "/ipfs/Qmf8GWn96bt6vebRWduLJfj16jfPgGmNAKKJqmHTGbXFcs/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the CDN entries.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "text", "label": "Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to concisely describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}, {"type": "image", "label": "Visual Proof", "description": "A PDF, image or video file that shows the ability for users to use this page to access the different contracts covered by this CDN entry.", "isIdentifier": false}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "module", "tcrTitle": "Contract-Domain Name Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve CDN tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Contract-Domain Name Query Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmZoKouZ1sJdu3iKfU7HxyWYwaSeV6i9Z4NYv1rh2FS6xq/metaevidence.json"}	{"title": "Remove a module from Contract-Domain Name Query Registry", "fileURI": "/ipfs/Qmf8GWn96bt6vebRWduLJfj16jfPgGmNAKKJqmHTGbXFcs/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the CDN entries.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "text", "label": "Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to concisely describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}, {"type": "image", "label": "Visual Proof", "description": "A PDF, image or video file that shows the ability for users to use this page to access the different contracts covered by this CDN entry.", "isIdentifier": false}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "module", "tcrTitle": "Contract-Domain Name Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve CDN tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Contract-Domain Name Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmR4CxYDSyJxwezTdiKnFwL6t3x6XXnDSaynMCthtapPJw/metaevidence.json"}	{"title": "Remove a module from Contract-Domain Name Query Registry", "fileURI": "/ipfs/QmPfzkG4FGqx52tcpXn4tYnpVT81V1bdj3Rr1y2ZuKUDEL/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the CDN entries.  The repository name must be in the kebab case (hyphen-case). ", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "text", "label": "Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to concisely describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}, {"type": "image", "label": "Visual Proof", "description": "A PDF, image or video file that shows the ability for users to use this page to access the different contracts covered by this CDN entry.", "isIdentifier": false}], "logoURI": "/ipfs/QmZfTETH5kdvYkmAMW9Ck211on2Ntw2UutYCvQbKm8iBEM/kleros-pnk-logo.png", "itemName": "module", "tcrTitle": "Contract-Domain Name Query Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve CDN tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Contract-Domain Name Query Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQLhzAcSdZ2pEyfzuW45sK8qjU8uarvXNcckr7rsHHM6e/metaevidence.json"}	{"title": "Add a module to Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmeShHWsUxATHd5RxhBzwfRKGQQyH4mVWvsQuWxaeSPBTv/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to add a module to Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the module complies with the required criteria and should be added.", "Select this if you think the module does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQXLacudiBSqeKWEia31h2MEWok8BJSfxmWipdNXiwWEx/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Red socks enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Red socks enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Red socks", "parentTCRAddress": "0x146D9E493fdF44a9F75B6Da7Dc1516eAdBc43BB3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Red socks enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmZH88tTBBBseAKhDUgYr9VCs69nKDSujihb4zZLNFqF54/clr-meta-evidence.json"}	{"title": "Remove an item from Red socks", "fileURI": "/ipfs/QmNtA39WwJmgGLjHwRudhLJPqQWLfSMx9ABhBbkWBeVgGN/klerosbook-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Brand", "description": "Brand of sock", "isIdentifier": true}], "logoURI": "/ipfs/Qmc5GcXUEYoSPNGw3aSPqSueLRAbzaNSbX5BY8wyhYcNY9/image-2-.png", "itemName": "item", "tcrTitle": "Red socks", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of red socks", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to remove an item from Red socks", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the item does not comply with the required criteria and should be removed.", "Select this if you think the item complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbWUqraZyUrHZFFJszrPNcPMA95NQQuz2CAmqV5pm39vG/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Red socks enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Red socks enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Red socks", "parentTCRAddress": "0x146D9E493fdF44a9F75B6Da7Dc1516eAdBc43BB3", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Red socks enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmXK5qcvU6dTv5KzfikX9FaUuumSDv5oUFTj6GG5N6EVUj/metaevidence.json"}	{"title": "Remove a module from Address Tags Query (ATQ) Registry", "fileURI": "/ipfs/QmeShHWsUxATHd5RxhBzwfRKGQQyH4mVWvsQuWxaeSPBTv/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "link", "label": "Github Repository URL", "description": "The URL of the repository containing the function that returns the Contract Tags.  The repository name must be in the kebab case (hyphen-case).", "isIdentifier": true}, {"type": "text", "label": "Commit hash", "description": "The hash of the specific commit for this repository to be referenced.", "isIdentifier": true}, {"type": "number", "label": "EVM Chain ID", "description": "The integer EVM Chain ID of the chain of the contracts being retrieved by the function in this module.", "isIdentifier": true}, {"type": "long text", "label": "Description", "description": "A field used to describe the range of contracts being curated here, specifying (if applicable) the version, type and purpose of the contracts that are returned. ", "isIdentifier": false}], "logoURI": "/ipfs/QmStzoYeV9nfJSms47TLo9f5t1fVrxjvvRf9GspCduXhE4/kleros-symbol.png", "itemName": "module", "tcrTitle": "Address Tags Query (ATQ) Registry", "isTCRofTCRs": false, "itemNamePlural": "modules", "relTcrDisabled": true, "tcrDescription": "A list of verified modules that can be used to retrieve address tags for ranges of EVM contracts in one go.", "requireRemovalEvidence": true}, "question": "Does the module comply with the required criteria?", "description": "Someone requested to remove a module from Address Tags Query (ATQ) Registry", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the module does not comply with the required criteria and should be removed.", "Select this if you think the module complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmVoCj1HfvbNCh6kRwv1TatTDqSdrYrWs57tUVFJ8w5mCY/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Red socks enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Red socks enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Red socks", "parentTCRAddress": "0xD4a38db532F309378Bf1fc5B89a6a412E223012B", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Red socks enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmTangcrN1KPmuZnKqPkiM3VHfxPWNoykipnar4uz4qJsa/reg-meta-evidence.json"}	{"title": "Add an item to Red socks", "fileURI": "/ipfs/QmNtA39WwJmgGLjHwRudhLJPqQWLfSMx9ABhBbkWBeVgGN/klerosbook-1-.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "address", "label": "Brand", "description": "Brand of sock", "isIdentifier": true}], "logoURI": "/ipfs/Qmc5GcXUEYoSPNGw3aSPqSueLRAbzaNSbX5BY8wyhYcNY9/image-2-.png", "itemName": "item", "tcrTitle": "Red socks", "isTCRofTCRs": false, "itemNamePlural": "items", "relTcrDisabled": true, "tcrDescription": "A list of red socks", "requireRemovalEvidence": true}, "question": "Does the item comply with the required criteria?", "description": "Someone requested to add an item to Red socks", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the item complies with the required criteria and should be added.", "Select this if you think the item does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmPnPVpxhmJD4JMwAB9unKuW4WXxi2DXs5ftHopmLWvACw/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Red socks enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Red socks enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Red socks", "parentTCRAddress": "0xD4a38db532F309378Bf1fc5B89a6a412E223012B", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Red socks enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmeTazfkmfJCVvm7KjeMtZVHBq2M3ziZPJenYRee1r5iFZ/rel-reg-meta-evidence.json"}	{"_v": "1.0.0", "title": "Add a list to Red socks enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Red socks enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Red socks", "parentTCRAddress": "0x801291fCFF740851D34ab80c6123886a3C4a84f5", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to add a list to Red socks enabled badges.", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the list complies with the required criteria and should be added.", "Select this if you think the list does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmU2tKCwDsbbPUwFFEYciPuwp4RUya7UzPW7W9GSJER9Yx/metaevidence.json"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmTJpbqEY9Ee2YrpS8hL8ESwgGkwMDTQobTW14dm7wTwCr/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmf1LtbFLpYzvw6xKvy7dbWrXtEfzMXyPcnxJRB7uyFKvv/rel-clr-meta-evidence.json"}	{"_v": "1.0.0", "title": "Remove a list from Red socks enabled badges", "fileURI": "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "GTCR address", "label": "Address", "description": "The Badges list address", "isIdentifier": true}, {"type": "text", "label": "Match File URI", "description": "The URI to the JSON file for matching columns for each list."}], "itemName": "list", "tcrTitle": "Red socks enabled badges", "isTCRofTCRs": true, "isConnectedTCR": true, "itemNamePlural": "lists", "relTcrDisabled": true, "tcrDescription": "A List of lists related to Red socks", "parentTCRAddress": "0x801291fCFF740851D34ab80c6123886a3C4a84f5", "requireRemovalEvidence": true}, "question": "Does the list comply with the required criteria?", "description": "Someone requested to remove a list from Red socks enabled badges.", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the list does not comply with the required criteria and should be removed.", "Select this if you think the list complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html", "evidenceDisplayInterfaceRequiredParams": ["disputeID", "arbitrableContractAddress", "arbitratorContractAddress", "arbitrableChainID", "arbitrableJsonRpcUrl"]}
{"ipfsHash":"QmWYE8BqVW9zi73sbHw8K6ZvYFbMnsx7yEoqV7pZZFPWsn/metaevidence.json"}	{"title": "Add an entry to Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmPaZoueeSTmPKBnQr53W6RgvwsSX6sHxzK8eK9VnYF6zF/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to add an entry to Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the entry complies with the required criteria and should be added.", "Select this if you think the entry does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmUEnivPyQdfQp8ij7VpvtASMCBrtCggJgZxkmb8xSqAw6/metaevidence.json"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmTJpbqEY9Ee2YrpS8hL8ESwgGkwMDTQobTW14dm7wTwCr/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmTpE4xw7UD2VMPEnRaNbi54FR4Xz3H48diwTajJ1MnG4o/metaevidence.json"}	{"title": "Remove an entry from Ledger Contract Domain Name registry v2", "fileURI": "/ipfs/QmPaZoueeSTmPKBnQr53W6RgvwsSX6sHxzK8eK9VnYF6zF/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract address", "description": "The address of the contract in question. Case-sensitive only if required by the blockchain that the address pertains to (e.g. Solana). ", "isIdentifier": true}, {"type": "text", "label": "Domain name", "description": "The specific (sub)domain name of the dApp where this contract is meant to be accessed from.  Wildcards (*) are acceptable as part of this field if proof can be shown that the contract is intended to be used across multiple domains.", "isIdentifier": true}, {"type": "image", "label": "Visual proof", "description": "If the domain is a specific root or subdomain, this must be a screenshot of the exact page and setup where this particular address can be interacted from.", "isIdentifier": false}], "logoURI": "/ipfs/QmNNSDkpyDX1wB4NNFdAzaHsJihpvgNVV89zCH8FH9CVAz/ledger-white.png", "itemName": "entry", "tcrTitle": "Ledger Contract Domain Name registry v2", "isTCRofTCRs": false, "itemNamePlural": "entries", "relTcrDisabled": true, "tcrDescription": "A list of contract addresses and the domain names they are meant to be used from .", "requireRemovalEvidence": true}, "question": "Does the entry comply with the required criteria?", "description": "Someone requested to remove an entry from Ledger Contract Domain Name registry v2", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the entry does not comply with the required criteria and should be removed.", "Select this if you think the entry complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmWM9xUf5rPpr4L83YTGfEPHxFbghYpMTkS7oN1wCkni7J/metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmRLCQ5AFtobGbDNnhEzVzbNnwUXR6Umqn5bd4MQKb4shU/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmRboE6PCAmscMUQcX8QP3nnrhRSSjENUcBe8uGFyjfZue/metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmRLCQ5AFtobGbDNnhEzVzbNnwUXR6Umqn5bd4MQKb4shU/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmV3ubG8LuSAPmL2CghiYrZjX1EkhqHxdNqDXWuY1XvKjZ"}	{"title": "Add a tag to Address Tags", "fileURI": "/ipfs/QmW98DxDWgcYpGmXq3p1sHba1iJ2F3ziBmVDtwH8kJgdmA", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to add a tag to Address Tags", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the tag complies with the required criteria and should be added.", "Select this if you think the tag does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmbfRx5rToD6c3xGnbWDY3wodjvgDRXP4qkDku12u5XEm6"}	{"title": "Remove a tag from Address Tags", "fileURI": "/ipfs/QmW98DxDWgcYpGmXq3p1sHba1iJ2F3ziBmVDtwH8kJgdmA", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Contract Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Public Name Tag", "description": "The Public Name tag of a contract address indicates a commonly-used name of the smart contract and clearly identifies it to avoid potential confusion. (e.g. Eth2 Deposit Contract).", "isIdentifier": true}, {"type": "text", "label": "Project Name", "description": "The name of the project that the contract belongs to. Can be omitted only for contracts which do not belong to a project", "isIdentifier": true}, {"type": "link", "label": "UI/Website Link", "description": "The URL of the most popular user interface used to interact with the contract tagged or the URL of the official website of the contract deployer (e.g. https://launchpad.ethereum.org/en/).", "isIdentifier": true}, {"type": "text", "label": "Public Note", "description": "The Public Note is a short, mandatory comment field used to add a comment/information about the contract that could not fit in the public name tag (e.g. Official Ethereum 2.0 Beacon Chain deposit contact address)."}], "logoURI": "/ipfs/QmP1hU1LaheHVGxcSJWg5sC3g25vs5snam3qP1bVVAa7mT/address-tag-2-1.png", "itemName": "tag", "tcrTitle": "Address Tags", "isTCRofTCRs": false, "itemNamePlural": "tags", "relTcrDisabled": true, "tcrDescription": "A list of public name tags, associated with contract addresses on various blockchains.", "requireRemovalEvidence": true}, "question": "Does the tag comply with the required criteria?", "description": "Someone requested to remove a tag from Address Tags", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the tag does not comply with the required criteria and should be removed.", "Select this if you think the tag complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaQxNLfQHWmEg4bkXQCex3ZXKNHcugbRDsukEdebnQAzE/reg-metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmdPjp9wzqmJdSwk7ow1LzdgDD7Q3FMNiA6TRj4bjFjag7/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"Qmc3T3ZCRt4SnW4KBzxPpE8dNY9gays6fkiV7sWpoxwQKH/reg-metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmarLK8MmtshY7tRPqh7TXFLLqFprAhE4KqDXHkP1ppydN/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmXkzdh5BH8qZkbqwEQwbega3LenexjouPWhCNJJGBJ58Q/metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmQnpBwKGCKBgG5h7t9c2zByrTkyCUqCxwiUPVKj4J8WC9/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmQwBo7gbq3SqtPsymjasKNKkTYTNAeBAEEiQPzGo8yf3F/metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmQnpBwKGCKBgG5h7t9c2zByrTkyCUqCxwiUPVKj4J8WC9/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmSn2hncYMwgc8q1mmhxsnNnZh4joszPe6CKJ1AbGDwwa7/clr-metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmdPjp9wzqmJdSwk7ow1LzdgDD7Q3FMNiA6TRj4bjFjag7/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmaFHkLHgH9Yz91GY4yzuEPC4ZrftWEUYmaLQN72ULepDG/registration-tokens-metaevidence.json"}	{"title": "Add a token to Kleros Tokens", "fileURI": "/ipfs/QmRLCQ5AFtobGbDNnhEzVzbNnwUXR6Umqn5bd4MQKb4shU/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to add a token to Kleros Tokens", "rulingOptions": {"titles": ["Yes, Add It", "No, Don't Add It"], "descriptions": ["Select this if you think the token complies with the required criteria and should be added.", "Select this if you think the token does not comply with the required criteria and should not be added."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
{"ipfsHash":"QmNTtdiK3p1KrH2vKuCCK5r6GwKDLgDPYcMNn6woVzU2ey/clearing-tokens-metaevidence.json"}	{"title": "Remove a token from Kleros Tokens", "fileURI": "/ipfs/QmRLCQ5AFtobGbDNnhEzVzbNnwUXR6Umqn5bd4MQKb4shU/policy.pdf", "category": "Curated Lists", "metadata": {"columns": [{"type": "rich address", "label": "Address", "description": "The address of the smart contract being tagged. Will be store in CAIP-10 format if the chain is properly selected in the UI.", "isIdentifier": true}, {"type": "text", "label": "Name", "description": "The name of the token", "isIdentifier": true}, {"type": "text", "label": "Symbol", "description": "The symbol/ticker of the token", "isIdentifier": true}, {"type": "number", "label": "Decimals", "description": "The number of decimals applicable for this token"}, {"type": "image", "label": "Logo", "description": "The PNG logo of the token (at least 128px X 128px in size", "isIdentifier": false}, {"type": "link", "label": "Website", "description": "The URL of the token project's official website. Its primary source for documentation, token specifications, and team information (e.g. https://chain.link).", "isIdentifier": true}], "logoURI": "/ipfs/QmZ5VC8FHMjs92yQEn9dnJottspM5JUbJUkPtno1hPPYks/t2cr-logo.974d9285.png", "itemName": "token", "tcrTitle": "Kleros Tokens", "isTCRofTCRs": false, "itemNamePlural": "tokens", "tcrDescription": "A list of tokens and their contract address across various blockchains", "requireRemovalEvidence": true}, "question": "Does the token comply with the required criteria?", "description": "Someone requested to remove a token from Kleros Tokens", "rulingOptions": {"titles": ["Yes, Remove It", "No, Don't Remove It"], "descriptions": ["Select this if you think the token does not comply with the required criteria and should be removed.", "Select this if you think the token complies with the required criteria and should not be removed."]}, "evidenceDisplayInterfaceURI": "/ipfs/QmNhJXtMrxeJu4fpchPruGrL93bm2M4VmDZ8pj4x6FqnHJ/index.html"}
